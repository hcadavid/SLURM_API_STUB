openapi: 3.0.2
info:
  title: Slurm Rest API RO
  description: API to access Slurm. Only GET requests are implemented.
  termsOfService: https://github.com/SchedMD/slurm/blob/master/DISCLAIMER
  contact:
    name: SchedMD LLC
    url: https://www.schedmd.com/
    email: sales@schedmd.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.0.38
servers:
- url: https://virtserver.swaggerhub.com/hcadavid6/slurm-rest_api_ro/0.0.38
  description: SwaggerHub API Auto Mocking
- url: /
security:
- user: []
  token: []
tags:
- name: slurm
  description: methods that query slurmctld
- name: openapi
  description: methods that query for OpenAPI specifications
paths:
  /slurm/v0.0.38/diag:
    get:
      tags:
      - slurm
      summary: get diagnostics
      operationId: slurm_v0_0_38_diag
      responses:
        "200":
          description: diagnostic results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.0.38_diag'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/v0.0.38_diag'
        default:
          description: unable to request ping test
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.0.38_errors'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/v0.0.38_errors'
      x-openapi-router-controller: swagger_server.controllers.slurm_controller
  /slurm/v0.0.38/licenses:
    get:
      tags:
      - slurm
      summary: get all Slurm tracked license info
      operationId: slurm_v0_0_38_slurmctld_get_licenses
      responses:
        "200":
          description: results of get all licenses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.0.38_licenses'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/v0.0.38_licenses'
        default:
          description: unable to request licenses
      x-openapi-router-controller: swagger_server.controllers.slurm_controller
  /slurm/v0.0.38/ping:
    get:
      tags:
      - slurm
      summary: ping test
      operationId: slurm_v0_0_38_ping
      responses:
        "200":
          description: results of ping test
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.0.38_pings'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/v0.0.38_pings'
        default:
          description: unable to request ping test
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.0.38_errors'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/v0.0.38_errors'
      x-openapi-router-controller: swagger_server.controllers.slurm_controller
  /slurm/v0.0.38/jobs:
    get:
      tags:
      - slurm
      summary: get list of jobs
      operationId: slurm_v0_0_38_get_jobs
      parameters:
      - name: update_time
        in: query
        description: Filter if changed since update_time. Use of this parameter can
          result in faster replies.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: job(s) information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.0.38_jobs_response'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/v0.0.38_jobs_response'
        default:
          description: job not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.0.38_errors'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/v0.0.38_errors'
      x-openapi-router-controller: swagger_server.controllers.slurm_controller
  /slurm/v0.0.38/job/{job_id}:
    get:
      tags:
      - slurm
      summary: get job info
      operationId: slurm_v0_0_38_get_job
      parameters:
      - name: job_id
        in: path
        description: Slurm JobID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: job(s) information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.0.38_jobs_response'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/v0.0.38_jobs_response'
        default:
          description: job matching JobId not found
      x-openapi-router-controller: swagger_server.controllers.slurm_controller
  /slurm/v0.0.38/nodes:
    get:
      tags:
      - slurm
      summary: get all node info
      operationId: slurm_v0_0_38_get_nodes
      parameters:
      - name: update_time
        in: query
        description: Filter if changed since update_time. Use of this parameter can
          result in faster replies.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: node information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.0.38_nodes_response'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/v0.0.38_nodes_response'
        default:
          description: no nodes in cluster
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.0.38_errors'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/v0.0.38_errors'
      x-openapi-router-controller: swagger_server.controllers.slurm_controller
  /slurm/v0.0.38/node/{node_name}:
    get:
      tags:
      - slurm
      summary: get node info
      operationId: slurm_v0_0_38_get_node
      parameters:
      - name: node_name
        in: path
        description: Slurm Node Name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: node information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.0.38_nodes_response'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/v0.0.38_nodes_response'
        default:
          description: node not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.0.38_errors'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/v0.0.38_errors'
      x-openapi-router-controller: swagger_server.controllers.slurm_controller
  /slurm/v0.0.38/partitions:
    get:
      tags:
      - slurm
      summary: get all partition info
      operationId: slurm_v0_0_38_get_partitions
      parameters:
      - name: update_time
        in: query
        description: Filter if changed since update_time. Use of this parameter can
          result in faster replies.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: partition information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.0.38_partitions_response'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/v0.0.38_partitions_response'
        default:
          description: no partitions found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.0.38_errors'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/v0.0.38_errors'
      x-openapi-router-controller: swagger_server.controllers.slurm_controller
  /slurm/v0.0.38/partition/{partition_name}:
    get:
      tags:
      - slurm
      summary: get partition info
      operationId: slurm_v0_0_38_get_partition
      parameters:
      - name: partition_name
        in: path
        description: Slurm Partition Name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: update_time
        in: query
        description: Filter if there were no partition changes (not limited to partition
          in URL endpoint) since update_time.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: partition information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.0.38_partitions_response'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/v0.0.38_partitions_response'
        default:
          description: no partitions found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.0.38_errors'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/v0.0.38_errors'
      x-openapi-router-controller: swagger_server.controllers.slurm_controller
  /slurm/v0.0.38/reservations:
    get:
      tags:
      - slurm
      summary: get all reservation info
      operationId: slurm_v0_0_38_get_reservations
      parameters:
      - name: update_time
        in: query
        description: Filter if changed since update_time. Use of this parameter can
          result in faster replies.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: reservation information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.0.38_reservations_response'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/v0.0.38_reservations_response'
        default:
          description: no reservations found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.0.38_errors'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/v0.0.38_errors'
      x-openapi-router-controller: swagger_server.controllers.slurm_controller
  /slurm/v0.0.38/reservation/{reservation_name}:
    get:
      tags:
      - slurm
      summary: get reservation info
      operationId: slurm_v0_0_38_get_reservation
      parameters:
      - name: reservation_name
        in: path
        description: Slurm Reservation Name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: update_time
        in: query
        description: Filter if no reservation (not limited to reservation in URL)
          changed since update_time.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: reservation information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.0.38_reservations_response'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/v0.0.38_reservations_response'
        default:
          description: no reservations found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.0.38_errors'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/v0.0.38_errors'
      x-openapi-router-controller: swagger_server.controllers.slurm_controller
  /openapi.yaml:
    get:
      tags:
      - openapi
      summary: Retrieve OpenAPI Specification
      operationId: openapi_yaml_get
      responses:
        "200":
          description: OpenAPI Specification
      x-openapi-router-controller: swagger_server.controllers.openapi_controller
  /openapi.json:
    get:
      tags:
      - openapi
      summary: Retrieve OpenAPI Specification
      operationId: openapi_json_get
      responses:
        "200":
          description: OpenAPI Specification
      x-openapi-router-controller: swagger_server.controllers.openapi_controller
  /openapi:
    get:
      tags:
      - openapi
      summary: Retrieve OpenAPI Specification
      operationId: openapi_get
      responses:
        "200":
          description: OpenAPI Specification
      x-openapi-router-controller: swagger_server.controllers.openapi_controller
  /openapi/v3:
    get:
      tags:
      - openapi
      summary: Retrieve OpenAPI Specification
      operationId: openapi_v3_get
      responses:
        "200":
          description: OpenAPI Specification
      x-openapi-router-controller: swagger_server.controllers.openapi_controller
components:
  schemas:
    v0.0.38_diag:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/v0.0.38_meta'
        errors:
          type: array
          description: slurm errors
          items:
            $ref: '#/components/schemas/v0.0.38_error'
        statistics:
          $ref: '#/components/schemas/v0_0_38_diag_statistics'
      example:
        meta:
          Slurm:
            release: release
            version:
              major: 0
              minor: 1
              micro: 6
          plugin:
            name: name
            type: type
        errors:
        - description: description
          source: source
          error: error
          error_number: 5
        - description: description
          source: source
          error: error
          error_number: 5
        statistics:
          schedule_cycle_per_minute: 4
          req_time_start: 7
          jobs_running: 3
          bf_cycle_max: 6
          bf_last_backfilled_jobs: 2
          rpcs_by_message_type:
          - average_time: 7
            type_id: 3
            count: 3
            message_type: message_type
            total_time: 5
          - average_time: 7
            type_id: 3
            count: 3
            message_type: message_type
            total_time: 5
          bf_last_depth: 3
          bf_backfilled_het_jobs: 6
          bf_backfilled_jobs: 1
          rpcs_by_user:
          - average_time: 0
            user_id: 3
            count: 4
            total_time: 6
            user: user
          - average_time: 0
            user_id: 3
            count: 4
            total_time: 6
            user: user
          bf_table_size: 4
          bf_cycle_mean: 5
          job_states_ts: 6
          bf_queue_len: 6
          jobs_started: 9
          schedule_cycle_max: 1
          server_thread_count: 9
          dbd_agent_queue_size: 7
          bf_table_size_mean: 8
          jobs_pending: 6
          agent_count: 2
          bf_cycle_last: 7
          parts_packed: 5
          agent_thread_count: 4
          jobs_completed: 6
          bf_depth_mean: 7
          bf_active: true
          bf_depth_mean_try: 0
          schedule_cycle_mean: 7
          agent_queue_size: 3
          jobs_failed: 9
          gettimeofday_latency: 1
          bf_last_depth_try: 3
          req_time: 2
          bf_cycle_counter: 6
          schedule_queue_length: 5
          bf_queue_len_mean: 0
          schedule_cycle_total: 6
          bf_when_last_cycle: 7
          schedule_cycle_last: 1
          jobs_canceled: 8
          jobs_submitted: 9
          schedule_cycle_mean_depth: 1
    v0.0.38_diag_rpcm:
      type: object
      properties:
        message_type:
          type: string
          description: message type
        type_id:
          type: integer
          description: message type id
        count:
          type: integer
          description: rpc count
        average_time:
          type: integer
          description: average time
        total_time:
          type: integer
          description: total time
      example:
        average_time: 7
        type_id: 3
        count: 3
        message_type: message_type
        total_time: 5
    v0.0.38_diag_rpcu:
      type: object
      properties:
        user:
          type: string
          description: user
        user_id:
          type: integer
          description: user id
        count:
          type: integer
          description: rpc count
        average_time:
          type: integer
          description: average time
        total_time:
          type: integer
          description: total time
      example:
        average_time: 0
        user_id: 3
        count: 4
        total_time: 6
        user: user
    v0.0.38_licenses:
      type: object
      properties:
        errors:
          type: array
          description: slurm errors
          items:
            $ref: '#/components/schemas/v0.0.38_error'
        licenses:
          type: array
          description: licenses info
          items:
            $ref: '#/components/schemas/v0.0.38_license'
      example:
        licenses:
        - Used: 6
          Total: 0
          Remote: true
          LicenseName: LicenseName
          Free: 1
          Reserved: 5
        - Used: 6
          Total: 0
          Remote: true
          LicenseName: LicenseName
          Free: 1
          Reserved: 5
        errors:
        - description: description
          source: source
          error: error
          error_number: 5
        - description: description
          source: source
          error: error
          error_number: 5
    v0.0.38_license:
      type: object
      properties:
        LicenseName:
          type: string
          description: name of license
        Total:
          type: integer
          description: total number of licenses
        Used:
          type: integer
          description: number of licenses in use
        Free:
          type: integer
          description: number of licenses available
        Reserved:
          type: integer
          description: number of licenses reserved
        Remote:
          type: boolean
          description: license is remote
      example:
        Used: 6
        Total: 0
        Remote: true
        LicenseName: LicenseName
        Free: 1
        Reserved: 5
    v0.0.38_pings:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/v0.0.38_meta'
        errors:
          type: array
          description: slurm errors
          items:
            $ref: '#/components/schemas/v0.0.38_error'
        pings:
          type: array
          description: slurm controller pings
          items:
            $ref: '#/components/schemas/v0.0.38_ping'
      example:
        meta:
          Slurm:
            release: release
            version:
              major: 0
              minor: 1
              micro: 6
          plugin:
            name: name
            type: type
        pings:
        - mode: mode
          hostname: hostname
          ping: UP
          status: 0
        - mode: mode
          hostname: hostname
          ping: UP
          status: 0
        errors:
        - description: description
          source: source
          error: error
          error_number: 5
        - description: description
          source: source
          error: error
          error_number: 5
    v0.0.38_ping:
      type: object
      properties:
        hostname:
          type: string
          description: slurm controller hostname
        ping:
          type: string
          description: slurm controller host up
          enum:
          - UP
          - DOWN
        mode:
          type: string
          description: slurm controller mode
        status:
          type: integer
          description: slurm controller status
      example:
        mode: mode
        hostname: hostname
        ping: UP
        status: 0
    v0.0.38_partition:
      type: object
      properties:
        flags:
          type: array
          description: partition options
          items:
            type: string
        preemption_mode:
          type: array
          description: preemption type
          items:
            type: string
        allowed_allocation_nodes:
          type: string
          description: list names of allowed allocating nodes
        allowed_accounts:
          type: string
          description: comma delimited list of accounts
        allowed_groups:
          type: string
          description: comma delimited list of groups
        allowed_qos:
          type: string
          description: comma delimited list of qos
        alternative:
          type: string
          description: name of alternate partition
        billing_weights:
          type: string
          description: TRES billing weights
        default_memory_per_cpu:
          type: integer
          description: default MB memory per allocated CPU
          format: int64
        default_time_limit:
          type: integer
          description: default time limit (minutes)
          format: int64
        denied_accounts:
          type: string
          description: comma delimited list of denied accounts
        denied_qos:
          type: string
          description: comma delimited list of denied qos
        preemption_grace_time:
          type: integer
          description: preemption grace time (seconds)
          format: int64
        maximum_cpus_per_node:
          type: integer
          description: maximum allocated CPUs per node
        maximum_memory_per_node:
          type: integer
          description: maximum memory per allocated node (MiB)
          format: int64
        maximum_nodes_per_job:
          type: integer
          description: Max nodes per job
        max_time_limit:
          type: integer
          description: Max time limit per job
          format: int64
        min_nodes_per_job:
          type: integer
          description: Min number of nodes per job
        name:
          type: string
          description: Partition name
        nodes:
          type: string
          description: list names of nodes in partition
        over_time_limit:
          type: integer
          description: job's time limit can be exceeded by this number of minutes
            before cancellation
        priority_job_factor:
          type: integer
          description: job priority weight factor
        priority_tier:
          type: integer
          description: tier for scheduling and preemption
        qos:
          type: string
          description: partition QOS name
        state:
          type: string
          description: Partition state
        total_cpus:
          type: integer
          description: Total cpus in partition
        total_nodes:
          type: integer
          description: Total number of nodes in partition
        tres:
          type: string
          description: configured TRES in partition
        maximum_memory_per_cpu:
          type: integer
          description: maximum memory per allocated CPU (MiB)
          format: int64
        default_memory_per_node:
          type: integer
          description: default MB memory per allocated node
          format: int64
      example:
        max_time_limit: 7
        maximum_cpus_per_node: 5
        over_time_limit: 3
        denied_accounts: denied_accounts
        flags:
        - flags
        - flags
        maximum_memory_per_node: 5
        total_cpus: 7
        billing_weights: billing_weights
        default_memory_per_cpu: 0
        default_memory_per_node: 1
        allowed_qos: allowed_qos
        min_nodes_per_job: 9
        qos: qos
        default_time_limit: 6
        denied_qos: denied_qos
        priority_job_factor: 2
        tres: tres
        allowed_allocation_nodes: allowed_allocation_nodes
        state: state
        preemption_grace_time: 1
        allowed_accounts: allowed_accounts
        alternative: alternative
        preemption_mode:
        - preemption_mode
        - preemption_mode
        nodes: nodes
        name: name
        allowed_groups: allowed_groups
        total_nodes: 1
        maximum_nodes_per_job: 2
        priority_tier: 4
        maximum_memory_per_cpu: 1
    v0.0.38_partitions_response:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/v0.0.38_meta'
        errors:
          type: array
          description: slurm errors
          items:
            $ref: '#/components/schemas/v0.0.38_error'
        partitions:
          type: array
          description: partition info
          items:
            $ref: '#/components/schemas/v0.0.38_partition'
      example:
        partitions:
        - max_time_limit: 7
          maximum_cpus_per_node: 5
          over_time_limit: 3
          denied_accounts: denied_accounts
          flags:
          - flags
          - flags
          maximum_memory_per_node: 5
          total_cpus: 7
          billing_weights: billing_weights
          default_memory_per_cpu: 0
          default_memory_per_node: 1
          allowed_qos: allowed_qos
          min_nodes_per_job: 9
          qos: qos
          default_time_limit: 6
          denied_qos: denied_qos
          priority_job_factor: 2
          tres: tres
          allowed_allocation_nodes: allowed_allocation_nodes
          state: state
          preemption_grace_time: 1
          allowed_accounts: allowed_accounts
          alternative: alternative
          preemption_mode:
          - preemption_mode
          - preemption_mode
          nodes: nodes
          name: name
          allowed_groups: allowed_groups
          total_nodes: 1
          maximum_nodes_per_job: 2
          priority_tier: 4
          maximum_memory_per_cpu: 1
        - max_time_limit: 7
          maximum_cpus_per_node: 5
          over_time_limit: 3
          denied_accounts: denied_accounts
          flags:
          - flags
          - flags
          maximum_memory_per_node: 5
          total_cpus: 7
          billing_weights: billing_weights
          default_memory_per_cpu: 0
          default_memory_per_node: 1
          allowed_qos: allowed_qos
          min_nodes_per_job: 9
          qos: qos
          default_time_limit: 6
          denied_qos: denied_qos
          priority_job_factor: 2
          tres: tres
          allowed_allocation_nodes: allowed_allocation_nodes
          state: state
          preemption_grace_time: 1
          allowed_accounts: allowed_accounts
          alternative: alternative
          preemption_mode:
          - preemption_mode
          - preemption_mode
          nodes: nodes
          name: name
          allowed_groups: allowed_groups
          total_nodes: 1
          maximum_nodes_per_job: 2
          priority_tier: 4
          maximum_memory_per_cpu: 1
        meta:
          Slurm:
            release: release
            version:
              major: 0
              minor: 1
              micro: 6
          plugin:
            name: name
            type: type
        errors:
        - description: description
          source: source
          error: error
          error_number: 5
        - description: description
          source: source
          error: error
          error_number: 5
    v0.0.38_reservation:
      type: object
      properties:
        accounts:
          type: string
          description: Allowed accounts
        burst_buffer:
          type: string
          description: Reserved burst buffer
        core_count:
          type: integer
          description: Number of reserved cores
        core_spec_cnt:
          type: integer
          description: Number of reserved specialized cores
        end_time:
          type: integer
          description: End time of the reservation
        features:
          type: string
          description: List of features
        flags:
          type: array
          description: Reservation options
          items:
            type: string
        groups:
          type: string
          description: List of groups permitted to use the reserved nodes
        licenses:
          type: string
          description: List of licenses
        max_start_delay:
          type: integer
          description: Maximum delay in which jobs outside of the reservation will
            be permitted to overlap once any jobs are queued for the reservation
        name:
          type: string
          description: Reservationn name
        node_count:
          type: integer
          description: Count of nodes reserved
        node_list:
          type: string
          description: List of reserved nodes
        partition:
          type: string
          description: Partition
        purge_completed:
          $ref: '#/components/schemas/v0_0_38_reservation_purge_completed'
        start_time:
          type: integer
          description: Start time of reservation
        watts:
          type: integer
          description: amount of power to reserve in watts
        tres:
          type: string
          description: List of TRES
        users:
          type: string
          description: List of users
      example:
        core_spec_cnt: 6
        end_time: 1
        flags:
        - flags
        - flags
        groups: groups
        users: users
        max_start_delay: 5
        features: features
        start_time: 7
        burst_buffer: burst_buffer
        licenses: licenses
        partition: partition
        watts: 9
        name: name
        tres: tres
        accounts: accounts
        node_count: 5
        node_list: node_list
        purge_completed:
          time: 2
        core_count: 0
    v0.0.38_reservations_response:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/v0.0.38_meta'
        errors:
          type: array
          description: slurm errors
          items:
            $ref: '#/components/schemas/v0.0.38_error'
        reservations:
          type: array
          description: reservation info
          items:
            $ref: '#/components/schemas/v0.0.38_reservation'
      example:
        reservations:
        - core_spec_cnt: 6
          end_time: 1
          flags:
          - flags
          - flags
          groups: groups
          users: users
          max_start_delay: 5
          features: features
          start_time: 7
          burst_buffer: burst_buffer
          licenses: licenses
          partition: partition
          watts: 9
          name: name
          tres: tres
          accounts: accounts
          node_count: 5
          node_list: node_list
          purge_completed:
            time: 2
          core_count: 0
        - core_spec_cnt: 6
          end_time: 1
          flags:
          - flags
          - flags
          groups: groups
          users: users
          max_start_delay: 5
          features: features
          start_time: 7
          burst_buffer: burst_buffer
          licenses: licenses
          partition: partition
          watts: 9
          name: name
          tres: tres
          accounts: accounts
          node_count: 5
          node_list: node_list
          purge_completed:
            time: 2
          core_count: 0
        meta:
          Slurm:
            release: release
            version:
              major: 0
              minor: 1
              micro: 6
          plugin:
            name: name
            type: type
        errors:
        - description: description
          source: source
          error: error
          error_number: 5
        - description: description
          source: source
          error: error
          error_number: 5
    v0.0.38_errors:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/v0.0.38_meta'
        errors:
          type: array
          description: slurm errors
          items:
            $ref: '#/components/schemas/v0.0.38_error'
      example:
        meta:
          Slurm:
            release: release
            version:
              major: 0
              minor: 1
              micro: 6
          plugin:
            name: name
            type: type
        errors:
        - description: description
          source: source
          error: error
          error_number: 5
        - description: description
          source: source
          error: error
          error_number: 5
    v0.0.38_error:
      type: object
      properties:
        error:
          type: string
          description: error message
        error_number:
          type: integer
          description: Slurm internal error number
        description:
          type: string
          description: error description
        source:
          type: string
          description: error source
      example:
        description: description
        source: source
        error: error
        error_number: 5
    v0.0.38_jobs_response:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/v0.0.38_meta'
        errors:
          type: array
          description: slurm errors
          items:
            $ref: '#/components/schemas/v0.0.38_error'
        jobs:
          type: array
          description: job descriptions
          items:
            $ref: '#/components/schemas/v0.0.38_job_response_properties'
      example:
        meta:
          Slurm:
            release: release
            version:
              major: 0
              minor: 1
              micro: 6
          plugin:
            name: name
            type: type
        jobs:
        - container: container
          cluster: cluster
          time_minimum: 3
          memory_per_tres: memory_per_tres
          qos: qos
          resize_time: 0
          eligible_time: 2
          cpus_per_tres: cpus_per_tres
          tasks: 6
          system_comment: system_comment
          federation_siblings_active: federation_siblings_active
          tasks_per_core: 6
          accrue_time: 0
          dependency: dependency
          profile:
          - profile
          - profile
          priority: 7
          tres_per_job: tres_per_job
          derived_exit_code: 3
          core_spec: core_spec
          mcs_label: mcs_label
          required_nodes: required_nodes
          tres_bind: tres_bind
          user_id: 5
          exit_code: 7
          federation_origin: federation_origin
          shared: shared
          tasks_per_board: 9
          user_name: user_name
          flags:
          - flags
          - flags
          standard_input: standard_input
          admin_comment: admin_comment
          cores_per_socket: cores_per_socket
          job_state: job_state
          current_working_directory: current_working_directory
          standard_error: standard_error
          array_job_id: 6
          cluster_features: cluster_features
          partition: partition
          threads_per_core: 7
          tres_alloc_str: tres_alloc_str
          memory_per_cpu: 6
          cpu_frequency_minimum: cpu_frequency_minimum
          node_count: 3
          deadline: 7
          memory_per_node: 6
          state_reason: state_reason
          het_job_offset: 2
          end_time: 4
          sockets_per_board: 6
          nice: 9
          last_sched_evaluation: 4
          tres_per_node: tres_per_node
          burst_buffer: burst_buffer
          licenses: licenses
          excluded_nodes: excluded_nodes
          array_max_tasks: 5
          het_job_id: 1
          sockets_per_node: 0
          time_limit: 3
          minimum_cpus_per_node: 5
          tasks_per_socket: 8
          batch_host: batch_host
          max_cpus: 5
          cpu_frequency_maximum: cpu_frequency_maximum
          features: features
          het_job_id_set: het_job_id_set
          state_description: state_description
          show_flags:
          - show_flags
          - show_flags
          array_task_id: 1
          minimum_tmp_disk_per_node: 6
          tres_req_str: tres_req_str
          burst_buffer_state: burst_buffer_state
          tres_per_socket: tres_per_socket
          array_task_string: array_task_string
          submit_time: 8
          wckey: wckey
          max_nodes: 9
          batch_flag: true
          start_time: 4
          name: name
          preempt_time: 3
          contiguous: true
          job_resources:
            nodes: nodes
            allocated_nodes:
            - nodename: nodename
              memory: 7
              cpus: 1
              sockets:
                cores: "{}"
            - nodename: nodename
              memory: 7
              cpus: 1
              sockets:
                cores: "{}"
            allocated_cpus: 1
            allocated_hosts: 6
          billable_tres: 2.3021358869347655
          federation_siblings_viable: federation_siblings_viable
          cpus_per_task: cpus_per_task
          batch_features: batch_features
          thread_spec: thread_spec
          cpu_frequency_governor: cpu_frequency_governor
          gres_detail:
          - gres_detail
          - gres_detail
          restart_cnt: 7
          resv_name: resv_name
          delay_boot: 9
          reboot: true
          cpus: 6
          standard_output: standard_output
          pre_sus_time: 3
          suspend_time: 7
          association_id: 5
          command: command
          tres_freq: tres_freq
          requeue: true
          tres_per_task: tres_per_task
          nodes: nodes
          group_id: 1
          job_id: 1
          comment: comment
          account: account
        - container: container
          cluster: cluster
          time_minimum: 3
          memory_per_tres: memory_per_tres
          qos: qos
          resize_time: 0
          eligible_time: 2
          cpus_per_tres: cpus_per_tres
          tasks: 6
          system_comment: system_comment
          federation_siblings_active: federation_siblings_active
          tasks_per_core: 6
          accrue_time: 0
          dependency: dependency
          profile:
          - profile
          - profile
          priority: 7
          tres_per_job: tres_per_job
          derived_exit_code: 3
          core_spec: core_spec
          mcs_label: mcs_label
          required_nodes: required_nodes
          tres_bind: tres_bind
          user_id: 5
          exit_code: 7
          federation_origin: federation_origin
          shared: shared
          tasks_per_board: 9
          user_name: user_name
          flags:
          - flags
          - flags
          standard_input: standard_input
          admin_comment: admin_comment
          cores_per_socket: cores_per_socket
          job_state: job_state
          current_working_directory: current_working_directory
          standard_error: standard_error
          array_job_id: 6
          cluster_features: cluster_features
          partition: partition
          threads_per_core: 7
          tres_alloc_str: tres_alloc_str
          memory_per_cpu: 6
          cpu_frequency_minimum: cpu_frequency_minimum
          node_count: 3
          deadline: 7
          memory_per_node: 6
          state_reason: state_reason
          het_job_offset: 2
          end_time: 4
          sockets_per_board: 6
          nice: 9
          last_sched_evaluation: 4
          tres_per_node: tres_per_node
          burst_buffer: burst_buffer
          licenses: licenses
          excluded_nodes: excluded_nodes
          array_max_tasks: 5
          het_job_id: 1
          sockets_per_node: 0
          time_limit: 3
          minimum_cpus_per_node: 5
          tasks_per_socket: 8
          batch_host: batch_host
          max_cpus: 5
          cpu_frequency_maximum: cpu_frequency_maximum
          features: features
          het_job_id_set: het_job_id_set
          state_description: state_description
          show_flags:
          - show_flags
          - show_flags
          array_task_id: 1
          minimum_tmp_disk_per_node: 6
          tres_req_str: tres_req_str
          burst_buffer_state: burst_buffer_state
          tres_per_socket: tres_per_socket
          array_task_string: array_task_string
          submit_time: 8
          wckey: wckey
          max_nodes: 9
          batch_flag: true
          start_time: 4
          name: name
          preempt_time: 3
          contiguous: true
          job_resources:
            nodes: nodes
            allocated_nodes:
            - nodename: nodename
              memory: 7
              cpus: 1
              sockets:
                cores: "{}"
            - nodename: nodename
              memory: 7
              cpus: 1
              sockets:
                cores: "{}"
            allocated_cpus: 1
            allocated_hosts: 6
          billable_tres: 2.3021358869347655
          federation_siblings_viable: federation_siblings_viable
          cpus_per_task: cpus_per_task
          batch_features: batch_features
          thread_spec: thread_spec
          cpu_frequency_governor: cpu_frequency_governor
          gres_detail:
          - gres_detail
          - gres_detail
          restart_cnt: 7
          resv_name: resv_name
          delay_boot: 9
          reboot: true
          cpus: 6
          standard_output: standard_output
          pre_sus_time: 3
          suspend_time: 7
          association_id: 5
          command: command
          tres_freq: tres_freq
          requeue: true
          tres_per_task: tres_per_task
          nodes: nodes
          group_id: 1
          job_id: 1
          comment: comment
          account: account
        errors:
        - description: description
          source: source
          error: error
          error_number: 5
        - description: description
          source: source
          error: error
          error_number: 5
    v0.0.38_job_response_properties:
      type: object
      properties:
        account:
          type: string
          description: Charge resources used by this job to specified account
        accrue_time:
          type: integer
          description: time job is eligible for running
          format: int64
        admin_comment:
          type: string
          description: administrator's arbitrary comment
        array_job_id:
          type: integer
          description: job_id of a job array or 0 if N/A
        array_task_id:
          type: integer
          description: task_id of a job array
        array_max_tasks:
          type: integer
          description: Maximum number of running array tasks
        array_task_string:
          type: string
          description: string expression of task IDs in this record
        association_id:
          type: integer
          description: association id for job
        batch_features:
          type: string
          description: features required for batch script's node
        batch_flag:
          type: boolean
          description: "if batch: queued job with script"
        batch_host:
          type: string
          description: name of host running batch script
        flags:
          type: array
          description: Job flags
          items:
            type: string
        burst_buffer:
          type: string
          description: burst buffer specifications
        burst_buffer_state:
          type: string
          description: burst buffer state info
        cluster:
          type: string
          description: name of cluster that the job is on
        cluster_features:
          type: string
          description: comma separated list of required cluster features
        command:
          type: string
          description: command to be executed
        comment:
          type: string
          description: arbitrary comment
        container:
          type: string
          description: absolute path to OCI container bundle
        contiguous:
          type: boolean
          description: job requires contiguous nodes
        core_spec:
          type: string
          description: specialized core count
        thread_spec:
          type: string
          description: specialized thread count
        cores_per_socket:
          type: string
          description: cores per socket required by job
        billable_tres:
          type: number
          description: billable TRES
        cpus_per_task:
          type: string
          description: number of processors required for each task
        cpu_frequency_minimum:
          type: string
          description: Minimum cpu frequency
        cpu_frequency_maximum:
          type: string
          description: Maximum cpu frequency
        cpu_frequency_governor:
          type: string
          description: cpu frequency governor
        cpus_per_tres:
          type: string
          description: semicolon delimited list of TRES=# values
        deadline:
          type: integer
          description: 'job start deadline '
        delay_boot:
          type: integer
          description: command to be executed
        dependency:
          type: string
          description: synchronize job execution with other jobs
        derived_exit_code:
          type: integer
          description: highest exit code of all job steps
        eligible_time:
          type: integer
          description: time job is eligible for running
          format: int64
        end_time:
          type: integer
          description: "time of termination, actual or expected"
          format: int64
        excluded_nodes:
          type: string
          description: comma separated list of excluded nodes
        exit_code:
          type: integer
          description: exit code for job
        features:
          type: string
          description: comma separated list of required features
        federation_origin:
          type: string
          description: Origin cluster's name
        federation_siblings_active:
          type: string
          description: string of active sibling names
        federation_siblings_viable:
          type: string
          description: string of viable sibling names
        gres_detail:
          type: array
          description: Job flags
          items:
            type: string
        group_id:
          type: integer
          description: group job submitted as
        job_id:
          type: integer
          description: job ID
        job_resources:
          $ref: '#/components/schemas/v0.0.38_job_resources'
        job_state:
          type: string
          description: state of the job
        last_sched_evaluation:
          type: integer
          description: last time job was evaluated for scheduling
        licenses:
          type: string
          description: licenses required by the job
        max_cpus:
          type: integer
          description: maximum number of cpus usable by job
        max_nodes:
          type: integer
          description: maximum number of nodes usable by job
        mcs_label:
          type: string
          description: mcs_label if mcs plugin in use
        memory_per_tres:
          type: string
          description: semicolon delimited list of TRES=# values
        name:
          type: string
          description: name of the job
        nodes:
          type: string
          description: list of nodes allocated to job
        nice:
          type: integer
          description: requested priority change
        tasks_per_core:
          type: integer
          description: number of tasks to invoke on each core
        tasks_per_socket:
          type: integer
          description: number of tasks to invoke on each socket
        tasks_per_board:
          type: integer
          description: number of tasks to invoke on each board
        cpus:
          type: integer
          description: minimum number of cpus required by job
        node_count:
          type: integer
          description: minimum number of nodes required by job
        tasks:
          type: integer
          description: requested task count
        het_job_id:
          type: integer
          description: job ID of hetjob leader
        het_job_id_set:
          type: string
          description: job IDs for all components
        het_job_offset:
          type: integer
          description: HetJob component offset from leader
        partition:
          type: string
          description: name of assigned partition
        memory_per_node:
          type: integer
          description: minimum real memory per node
        memory_per_cpu:
          type: integer
          description: minimum real memory per cpu
        minimum_cpus_per_node:
          type: integer
          description: "minimum # CPUs per node"
        minimum_tmp_disk_per_node:
          type: integer
          description: minimum tmp disk per node
        preempt_time:
          type: integer
          description: preemption signal time
          format: int64
        pre_sus_time:
          type: integer
          description: time job ran prior to last suspend
          format: int64
        priority:
          type: integer
          description: relative priority of the job
          format: int64
        profile:
          type: array
          description: Job profiling requested
          items:
            type: string
        qos:
          type: string
          description: Quality of Service
        reboot:
          type: boolean
          description: node reboot requested before start
        required_nodes:
          type: string
          description: comma separated list of required nodes
        requeue:
          type: boolean
          description: enable or disable job requeue option
        resize_time:
          type: integer
          description: time of latest size change
          format: int64
        restart_cnt:
          type: integer
          description: count of job restarts
        resv_name:
          type: string
          description: reservation name
        shared:
          type: string
          description: type and if job can share nodes with other jobs
        show_flags:
          type: array
          description: details requested
          items:
            type: string
        sockets_per_board:
          type: integer
          description: sockets per board required by job
        sockets_per_node:
          type: integer
          description: sockets per node required by job
        start_time:
          type: integer
          description: "time execution begins, actual or expected"
          format: int64
        state_description:
          type: string
          description: optional details for state_reason
        state_reason:
          type: string
          description: reason job still pending or failed
        standard_error:
          type: string
          description: pathname of job's stderr file
        standard_input:
          type: string
          description: pathname of job's stdin file
        standard_output:
          type: string
          description: pathname of job's stdout file
        submit_time:
          type: integer
          description: time of job submission
          format: int64
        suspend_time:
          type: integer
          description: time job last suspended or resumed
          format: int64
        system_comment:
          type: string
          description: slurmctld's arbitrary comment
        time_limit:
          type: integer
          description: maximum run time in minutes
          format: int64
        time_minimum:
          type: integer
          description: minimum run time in minutes
          format: int64
        threads_per_core:
          type: integer
          description: threads per core required by job
        tres_bind:
          type: string
          description: Task to TRES binding directives
        tres_freq:
          type: string
          description: TRES frequency directives
        tres_per_job:
          type: string
          description: semicolon delimited list of TRES=# values
        tres_per_node:
          type: string
          description: semicolon delimited list of TRES=# values
        tres_per_socket:
          type: string
          description: semicolon delimited list of TRES=# values
        tres_per_task:
          type: string
          description: semicolon delimited list of TRES=# values
        tres_req_str:
          type: string
          description: tres reqeusted in the job
        tres_alloc_str:
          type: string
          description: tres used in the job
        user_id:
          type: integer
          description: user id the job runs as
          format: int64
        user_name:
          type: string
          description: user the job runs as
        wckey:
          type: string
          description: wckey for job
        current_working_directory:
          type: string
          description: pathname of working directory
      example:
        container: container
        cluster: cluster
        time_minimum: 3
        memory_per_tres: memory_per_tres
        qos: qos
        resize_time: 0
        eligible_time: 2
        cpus_per_tres: cpus_per_tres
        tasks: 6
        system_comment: system_comment
        federation_siblings_active: federation_siblings_active
        tasks_per_core: 6
        accrue_time: 0
        dependency: dependency
        profile:
        - profile
        - profile
        priority: 7
        tres_per_job: tres_per_job
        derived_exit_code: 3
        core_spec: core_spec
        mcs_label: mcs_label
        required_nodes: required_nodes
        tres_bind: tres_bind
        user_id: 5
        exit_code: 7
        federation_origin: federation_origin
        shared: shared
        tasks_per_board: 9
        user_name: user_name
        flags:
        - flags
        - flags
        standard_input: standard_input
        admin_comment: admin_comment
        cores_per_socket: cores_per_socket
        job_state: job_state
        current_working_directory: current_working_directory
        standard_error: standard_error
        array_job_id: 6
        cluster_features: cluster_features
        partition: partition
        threads_per_core: 7
        tres_alloc_str: tres_alloc_str
        memory_per_cpu: 6
        cpu_frequency_minimum: cpu_frequency_minimum
        node_count: 3
        deadline: 7
        memory_per_node: 6
        state_reason: state_reason
        het_job_offset: 2
        end_time: 4
        sockets_per_board: 6
        nice: 9
        last_sched_evaluation: 4
        tres_per_node: tres_per_node
        burst_buffer: burst_buffer
        licenses: licenses
        excluded_nodes: excluded_nodes
        array_max_tasks: 5
        het_job_id: 1
        sockets_per_node: 0
        time_limit: 3
        minimum_cpus_per_node: 5
        tasks_per_socket: 8
        batch_host: batch_host
        max_cpus: 5
        cpu_frequency_maximum: cpu_frequency_maximum
        features: features
        het_job_id_set: het_job_id_set
        state_description: state_description
        show_flags:
        - show_flags
        - show_flags
        array_task_id: 1
        minimum_tmp_disk_per_node: 6
        tres_req_str: tres_req_str
        burst_buffer_state: burst_buffer_state
        tres_per_socket: tres_per_socket
        array_task_string: array_task_string
        submit_time: 8
        wckey: wckey
        max_nodes: 9
        batch_flag: true
        start_time: 4
        name: name
        preempt_time: 3
        contiguous: true
        job_resources:
          nodes: nodes
          allocated_nodes:
          - nodename: nodename
            memory: 7
            cpus: 1
            sockets:
              cores: "{}"
          - nodename: nodename
            memory: 7
            cpus: 1
            sockets:
              cores: "{}"
          allocated_cpus: 1
          allocated_hosts: 6
        billable_tres: 2.3021358869347655
        federation_siblings_viable: federation_siblings_viable
        cpus_per_task: cpus_per_task
        batch_features: batch_features
        thread_spec: thread_spec
        cpu_frequency_governor: cpu_frequency_governor
        gres_detail:
        - gres_detail
        - gres_detail
        restart_cnt: 7
        resv_name: resv_name
        delay_boot: 9
        reboot: true
        cpus: 6
        standard_output: standard_output
        pre_sus_time: 3
        suspend_time: 7
        association_id: 5
        command: command
        tres_freq: tres_freq
        requeue: true
        tres_per_task: tres_per_task
        nodes: nodes
        group_id: 1
        job_id: 1
        comment: comment
        account: account
    v0.0.38_job_resources:
      type: object
      properties:
        nodes:
          type: string
          description: list of assigned job nodes
        allocated_cpus:
          type: integer
          description: number of assigned job cpus
        allocated_hosts:
          type: integer
          description: number of assigned job hosts
        allocated_nodes:
          type: array
          description: array of allocated nodes
          items:
            $ref: '#/components/schemas/v0.0.38_node_allocation'
      example:
        nodes: nodes
        allocated_nodes:
        - nodename: nodename
          memory: 7
          cpus: 1
          sockets:
            cores: "{}"
        - nodename: nodename
          memory: 7
          cpus: 1
          sockets:
            cores: "{}"
        allocated_cpus: 1
        allocated_hosts: 6
    v0.0.38_node_allocation:
      type: object
      properties:
        memory:
          type: integer
          description: amount of assigned job memory
        cpus:
          type: integer
          description: number of assigned job CPUs
        sockets:
          $ref: '#/components/schemas/v0_0_38_node_allocation_sockets'
        nodename:
          type: string
          description: node name
      example:
        nodename: nodename
        memory: 7
        cpus: 1
        sockets:
          cores: "{}"
    v0.0.38_job_properties:
      required:
      - environment
      type: object
      properties:
        account:
          type: string
          description: Charge resources used by this job to specified account.
        account_gather_frequency:
          type: string
          description: Define the job accounting and profiling sampling intervals.
        argv:
          type: array
          description: Arguments to the script.
          items:
            type: string
        array:
          type: string
          description: "Submit a job array, multiple jobs to be executed with identical\
            \ parameters. The indexes specification identifies what array index values\
            \ should be used."
        batch_features:
          type: string
          description: features required for batch script's node
        begin_time:
          type: integer
          description: "Submit the batch script to the Slurm controller immediately,\
            \ like normal, but tell the controller to defer the allocation of the\
            \ job until the specified time."
          format: int64
        burst_buffer:
          type: string
          description: Burst buffer specification.
        cluster_constraint:
          type: string
          description: Specifies features that a federated cluster must have to have
            a sibling job submitted to it.
        comment:
          type: string
          description: An arbitrary comment.
        constraints:
          type: string
          description: node features required by job.
        container:
          type: string
          description: absolute path to OCI container bundle
        core_specification:
          type: integer
          description: Count of specialized threads per node reserved by the job for
            system operations and not used by the application.
        cores_per_socket:
          type: integer
          description: Restrict node selection to nodes with at least the specified
            number of cores per socket.
        cpu_binding:
          type: string
          description: Cpu binding
        cpu_binding_hint:
          type: string
          description: Cpu binding hint
        cpu_frequency:
          type: string
          description: "Request that job steps initiated by srun commands inside this\
            \ sbatch script be run at some requested frequency if possible, on the\
            \ CPUs selected for the step on the compute node(s)."
        cpus_per_gpu:
          type: string
          description: Number of CPUs requested per allocated GPU.
        cpus_per_task:
          type: integer
          description: Advise the Slurm controller that ensuing job steps will require
            ncpus number of processors per task.
        current_working_directory:
          type: string
          description: Instruct Slurm to connect the batch script's standard output
            directly to the file name.
        deadline:
          type: string
          description: "Remove the job if no ending is possible before this deadline\
            \ (start > (deadline - time[-min]))."
        delay_boot:
          type: integer
          description: Do not reboot nodes in order to satisfied this job's feature
            specification if the job has been eligible to run for less than this time
            period.
        dependency:
          type: string
          description: Defer the start of this job until the specified dependencies
            have been satisfied completed.
        distribution:
          type: string
          description: Specify alternate distribution methods for remote processes.
        environment:
          type: object
          description: Dictionary of environment entries.
        exclusive:
          type: string
          description: The job allocation can share nodes just other users with the
            "user" option or with the "mcs" option).
          enum:
          - user
          - mcs
          - "true"
          - "false"
        get_user_environment:
          type: boolean
          description: Load new login environment for user on job node.
        gres:
          type: string
          description: Specifies a comma delimited list of generic consumable resources.
        gres_flags:
          type: string
          description: Specify generic resource task binding options.
          enum:
          - disable-binding
          - enforce-binding
        gpu_binding:
          type: string
          description: Requested binding of tasks to GPU.
        gpu_frequency:
          type: string
          description: Requested GPU frequency.
        gpus:
          type: string
          description: GPUs per job.
        gpus_per_node:
          type: string
          description: GPUs per node.
        gpus_per_socket:
          type: string
          description: GPUs per socket.
        gpus_per_task:
          type: string
          description: GPUs per task.
        hold:
          type: boolean
          description: Specify the job is to be submitted in a held state (priority
            of zero).
        kill_on_invalid_dependency:
          type: boolean
          description: "If a job has an invalid dependency, then Slurm is to terminate\
            \ it."
        licenses:
          type: string
          description: Specification of licenses (or other resources available on
            all nodes of the cluster) which must be allocated to this job.
        mail_type:
          type: string
          description: Notify user by email when certain event types occur.
        mail_user:
          type: string
          description: User to receive email notification of state changes as defined
            by mail_type.
        mcs_label:
          type: string
          description: This parameter is a group among the groups of the user.
        memory_binding:
          type: string
          description: Bind tasks to memory.
        memory_per_cpu:
          type: integer
          description: Minimum real memory per cpu (MB).
        memory_per_gpu:
          type: integer
          description: Minimum memory required per allocated GPU.
        memory_per_node:
          type: integer
          description: Minimum real memory per node (MB).
        minimum_cpus_per_node:
          type: integer
          description: Minimum number of CPUs per node.
        minimum_nodes:
          type: boolean
          description: "If a range of node counts is given, prefer the smaller count."
        name:
          type: string
          description: Specify a name for the job allocation.
        nice:
          type: integer
          description: Run the job with an adjusted scheduling priority within Slurm.
        no_kill:
          type: boolean
          description: Do not automatically terminate a job if one of the nodes it
            has been allocated fails.
        nodes:
          maxItems: 2
          minItems: 1
          type: array
          description: Request that a minimum of minnodes nodes and a maximum node
            count.
          items:
            type: integer
        open_mode:
          type: string
          description: Open the output and error files using append or truncate mode
            as specified.
          default: append
          enum:
          - append
          - truncate
        oversubscribe:
          type: boolean
          description: The job allocation can over-subscribe resources with other
            running jobs.
          default: false
        partition:
          type: string
          description: Request a specific partition for the resource allocation.
        prefer:
          type: string
          description: Comma delimited list of features for scheduler to prefer but
            not a strict requirement like a constraint. Value can be used for job
            submission but is only displayed for PENDING jobs.
        priority:
          type: string
          description: Request a specific job priority.
        qos:
          type: string
          description: Request a quality of service for the job.
        requeue:
          type: boolean
          description: Specifies that the batch job should eligible to being requeue.
        reservation:
          type: string
          description: Allocate resources for the job from the named reservation.
        signal:
          pattern: (B:|)sig_num(@sig_time|)
          type: string
          description: "When a job is within sig_time seconds of its end time, send\
            \ it the signal sig_num."
        sockets_per_node:
          type: integer
          description: Restrict node selection to nodes with at least the specified
            number of sockets.
        spread_job:
          type: boolean
          description: Spread the job allocation over as many nodes as possible and
            attempt to evenly distribute tasks across the allocated nodes.
        standard_error:
          type: string
          description: Instruct Slurm to connect the batch script's standard error
            directly to the file name.
        standard_input:
          type: string
          description: Instruct Slurm to connect the batch script's standard input
            directly to the file name specified.
        standard_output:
          type: string
          description: Instruct Slurm to connect the batch script's standard output
            directly to the file name.
        tasks:
          type: integer
          description: Advises the Slurm controller that job steps run within the
            allocation will launch a maximum of number tasks and to provide for sufficient
            resources.
        tasks_per_core:
          type: integer
          description: Request the maximum ntasks be invoked on each core.
        tasks_per_node:
          type: integer
          description: Request the maximum ntasks be invoked on each node.
        tasks_per_socket:
          type: integer
          description: Request the maximum ntasks be invoked on each socket.
        thread_specification:
          type: integer
          description: Count of specialized threads per node reserved by the job for
            system operations and not used by the application.
        threads_per_core:
          type: integer
          description: Restrict node selection to nodes with at least the specified
            number of threads per core.
        time_limit:
          type: integer
          description: Step time limit in minutes.
        time_minimum:
          type: integer
          description: Minimum run time in minutes.
        wait_all_nodes:
          type: boolean
          description: Do not begin execution until all nodes are ready for use.
        wckey:
          type: string
          description: Specify wckey to be used with job.
    v0.0.38_node:
      type: object
      properties:
        architecture:
          type: string
          description: computer architecture
        burstbuffer_network_address:
          type: string
          description: BcastAddr
        boards:
          type: integer
          description: total number of boards per node
        boot_time:
          type: integer
          description: timestamp of node boot
          format: int64
        cores:
          type: integer
          description: number of cores per socket
        cpu_binding:
          type: integer
          description: Default task binding
        cpu_load:
          type: integer
          description: CPU load * 100
          format: int64
        free_memory:
          type: integer
          description: free memory in MiB
        cpus:
          type: integer
          description: configured count of cpus running on the node
        features:
          type: string
          description: ""
        active_features:
          type: string
          description: list of a node's available features
        gres:
          type: string
          description: list of a node's generic resources
        gres_drained:
          type: string
          description: list of drained GRES
        gres_used:
          type: string
          description: list of GRES in current use
        mcs_label:
          type: string
          description: mcs label if mcs plugin in use
        name:
          type: string
          description: node name to slurm
        next_state_after_reboot:
          type: string
          description: state after reboot
        next_state_after_reboot_flags:
          type: array
          description: node state flags
          items:
            type: string
        address:
          type: string
          description: state after reboot
        hostname:
          type: string
          description: node's hostname
        state:
          type: string
          description: current node state
        state_flags:
          type: array
          description: node state flags
          items:
            type: string
        operating_system:
          type: string
          description: operating system
        owner:
          type: string
          description: User allowed to use this node
        partitions:
          type: array
          description: assigned partitions
          items:
            type: string
        port:
          type: integer
          description: TCP port number of the slurmd
        real_memory:
          type: integer
          description: configured MB of real memory on the node
        reason:
          type: string
          description: reason for node being DOWN or DRAINING
        reason_changed_at:
          type: integer
          description: Time stamp when reason was set
        reason_set_by_user:
          type: string
          description: User that set the reason
        slurmd_start_time:
          type: integer
          description: timestamp of slurmd startup
          format: int64
        sockets:
          type: integer
          description: total number of sockets per node
        threads:
          type: integer
          description: number of threads per core
        temporary_disk:
          type: integer
          description: configured MB of total disk in TMP_FS
        weight:
          type: integer
          description: arbitrary priority of node for scheduling
        tres:
          type: string
          description: TRES on node
        tres_used:
          type: string
          description: TRES used on node
        tres_weighted:
          type: number
          description: TRES weight used on node
          format: double
        slurmd_version:
          type: string
          description: Slurmd version
        alloc_cpus:
          type: integer
          description: Allocated CPUs
          format: int64
        idle_cpus:
          type: integer
          description: Idle CPUs
          format: int64
        alloc_memory:
          type: integer
          description: Allocated memory (MB)
          format: int64
      example:
        reason: reason
        boards: 0
        alloc_cpus: 7
        active_features: active_features
        reason_set_by_user: reason_set_by_user
        slurmd_start_time: 4
        features: features
        hostname: hostname
        cores: 1
        slurmd_version: slurmd_version
        reason_changed_at: 2
        operating_system: operating_system
        next_state_after_reboot_flags:
        - next_state_after_reboot_flags
        - next_state_after_reboot_flags
        tres: tres
        cpu_binding: 5
        state: state
        sockets: 7
        architecture: architecture
        owner: owner
        partitions:
        - partitions
        - partitions
        state_flags:
        - state_flags
        - state_flags
        address: address
        cpus: 7
        free_memory: 2
        tres_weighted: 6.84685269835264
        gres: gres
        gres_drained: gres_drained
        threads: 1
        weight: 1
        boot_time: 6
        gres_used: gres_used
        alloc_memory: 4
        mcs_label: mcs_label
        real_memory: 3
        burstbuffer_network_address: burstbuffer_network_address
        port: 9
        name: name
        next_state_after_reboot: next_state_after_reboot
        temporary_disk: 1
        tres_used: tres_used
        idle_cpus: 1
        cpu_load: 5
    v0.0.38_nodes_response:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/v0.0.38_meta'
        errors:
          type: array
          description: slurm errors
          items:
            $ref: '#/components/schemas/v0.0.38_error'
        nodes:
          type: array
          description: nodes info
          items:
            $ref: '#/components/schemas/v0.0.38_node'
      example:
        nodes:
        - reason: reason
          boards: 0
          alloc_cpus: 7
          active_features: active_features
          reason_set_by_user: reason_set_by_user
          slurmd_start_time: 4
          features: features
          hostname: hostname
          cores: 1
          slurmd_version: slurmd_version
          reason_changed_at: 2
          operating_system: operating_system
          next_state_after_reboot_flags:
          - next_state_after_reboot_flags
          - next_state_after_reboot_flags
          tres: tres
          cpu_binding: 5
          state: state
          sockets: 7
          architecture: architecture
          owner: owner
          partitions:
          - partitions
          - partitions
          state_flags:
          - state_flags
          - state_flags
          address: address
          cpus: 7
          free_memory: 2
          tres_weighted: 6.84685269835264
          gres: gres
          gres_drained: gres_drained
          threads: 1
          weight: 1
          boot_time: 6
          gres_used: gres_used
          alloc_memory: 4
          mcs_label: mcs_label
          real_memory: 3
          burstbuffer_network_address: burstbuffer_network_address
          port: 9
          name: name
          next_state_after_reboot: next_state_after_reboot
          temporary_disk: 1
          tres_used: tres_used
          idle_cpus: 1
          cpu_load: 5
        - reason: reason
          boards: 0
          alloc_cpus: 7
          active_features: active_features
          reason_set_by_user: reason_set_by_user
          slurmd_start_time: 4
          features: features
          hostname: hostname
          cores: 1
          slurmd_version: slurmd_version
          reason_changed_at: 2
          operating_system: operating_system
          next_state_after_reboot_flags:
          - next_state_after_reboot_flags
          - next_state_after_reboot_flags
          tres: tres
          cpu_binding: 5
          state: state
          sockets: 7
          architecture: architecture
          owner: owner
          partitions:
          - partitions
          - partitions
          state_flags:
          - state_flags
          - state_flags
          address: address
          cpus: 7
          free_memory: 2
          tres_weighted: 6.84685269835264
          gres: gres
          gres_drained: gres_drained
          threads: 1
          weight: 1
          boot_time: 6
          gres_used: gres_used
          alloc_memory: 4
          mcs_label: mcs_label
          real_memory: 3
          burstbuffer_network_address: burstbuffer_network_address
          port: 9
          name: name
          next_state_after_reboot: next_state_after_reboot
          temporary_disk: 1
          tres_used: tres_used
          idle_cpus: 1
          cpu_load: 5
        meta:
          Slurm:
            release: release
            version:
              major: 0
              minor: 1
              micro: 6
          plugin:
            name: name
            type: type
        errors:
        - description: description
          source: source
          error: error
          error_number: 5
        - description: description
          source: source
          error: error
          error_number: 5
    v0.0.38_meta:
      type: object
      properties:
        plugin:
          $ref: '#/components/schemas/v0_0_38_meta_plugin'
        Slurm:
          $ref: '#/components/schemas/v0_0_38_meta_Slurm'
      example:
        Slurm:
          release: release
          version:
            major: 0
            minor: 1
            micro: 6
        plugin:
          name: name
          type: type
    v0_0_38_diag_statistics:
      type: object
      properties:
        parts_packed:
          type: integer
          description: partition records packed
        req_time:
          type: integer
          description: generation time
        req_time_start:
          type: integer
          description: data since
        server_thread_count:
          type: integer
          description: Server thread count
        agent_queue_size:
          type: integer
          description: Agent queue size
        agent_count:
          type: integer
          description: Agent count
        agent_thread_count:
          type: integer
          description: Agent thread count
        dbd_agent_queue_size:
          type: integer
          description: DBD Agent queue size
        gettimeofday_latency:
          type: integer
          description: Latency for 1000 calls to gettimeofday()
        schedule_cycle_max:
          type: integer
          description: Main Schedule max cycle
        schedule_cycle_last:
          type: integer
          description: Main Schedule last cycle
        schedule_cycle_total:
          type: integer
          description: Main Schedule cycle iterations
        schedule_cycle_mean:
          type: integer
          description: Average time for Schedule Max cycle
        schedule_cycle_mean_depth:
          type: integer
          description: Average depth for Schedule Max cycle
        schedule_cycle_per_minute:
          type: integer
          description: Main Schedule Cycles per minute
        schedule_queue_length:
          type: integer
          description: Main Schedule Last queue length
        jobs_submitted:
          type: integer
          description: Job submitted
        jobs_started:
          type: integer
          description: Job started
        jobs_completed:
          type: integer
          description: Job completed
        jobs_canceled:
          type: integer
          description: Job cancelled
        jobs_failed:
          type: integer
          description: Job failed
        jobs_pending:
          type: integer
          description: Job pending
        jobs_running:
          type: integer
          description: Job running
        job_states_ts:
          type: integer
          description: Job states timestamp
        bf_backfilled_jobs:
          type: integer
          description: Total backfilled jobs (since last slurm start)
        bf_last_backfilled_jobs:
          type: integer
          description: Total backfilled jobs (since last stats cycle start)
        bf_backfilled_het_jobs:
          type: integer
          description: Total backfilled heterogeneous job components
        bf_cycle_counter:
          type: integer
          description: Backfill Schedule Total cycles
        bf_cycle_mean:
          type: integer
          description: Backfill Schedule Mean cycle
        bf_cycle_max:
          type: integer
          description: Backfill Schedule Max cycle time
        bf_last_depth:
          type: integer
          description: Backfill Schedule Last depth cycle
        bf_last_depth_try:
          type: integer
          description: Backfill Schedule Mean cycle (try sched)
        bf_depth_mean:
          type: integer
          description: Backfill Schedule Depth Mean
        bf_depth_mean_try:
          type: integer
          description: Backfill Schedule Depth Mean (try sched)
        bf_cycle_last:
          type: integer
          description: Backfill Schedule Last cycle time
        bf_queue_len:
          type: integer
          description: Backfill Schedule Last queue length
        bf_queue_len_mean:
          type: integer
          description: Backfill Schedule Mean queue length
        bf_table_size:
          type: integer
          description: Backfill Schedule Last table size
        bf_table_size_mean:
          type: integer
          description: Backfill Schedule Mean table size
        bf_when_last_cycle:
          type: integer
          description: Last cycle timestamp
        bf_active:
          type: boolean
          description: Backfill Schedule currently active
        rpcs_by_message_type:
          type: array
          description: Remote Procedure Call statistics by message type
          items:
            $ref: '#/components/schemas/v0.0.38_diag_rpcm'
        rpcs_by_user:
          type: array
          description: Remote Procedure Call statistics by user
          items:
            $ref: '#/components/schemas/v0.0.38_diag_rpcu'
      description: Slurm statistics
      example:
        schedule_cycle_per_minute: 4
        req_time_start: 7
        jobs_running: 3
        bf_cycle_max: 6
        bf_last_backfilled_jobs: 2
        rpcs_by_message_type:
        - average_time: 7
          type_id: 3
          count: 3
          message_type: message_type
          total_time: 5
        - average_time: 7
          type_id: 3
          count: 3
          message_type: message_type
          total_time: 5
        bf_last_depth: 3
        bf_backfilled_het_jobs: 6
        bf_backfilled_jobs: 1
        rpcs_by_user:
        - average_time: 0
          user_id: 3
          count: 4
          total_time: 6
          user: user
        - average_time: 0
          user_id: 3
          count: 4
          total_time: 6
          user: user
        bf_table_size: 4
        bf_cycle_mean: 5
        job_states_ts: 6
        bf_queue_len: 6
        jobs_started: 9
        schedule_cycle_max: 1
        server_thread_count: 9
        dbd_agent_queue_size: 7
        bf_table_size_mean: 8
        jobs_pending: 6
        agent_count: 2
        bf_cycle_last: 7
        parts_packed: 5
        agent_thread_count: 4
        jobs_completed: 6
        bf_depth_mean: 7
        bf_active: true
        bf_depth_mean_try: 0
        schedule_cycle_mean: 7
        agent_queue_size: 3
        jobs_failed: 9
        gettimeofday_latency: 1
        bf_last_depth_try: 3
        req_time: 2
        bf_cycle_counter: 6
        schedule_queue_length: 5
        bf_queue_len_mean: 0
        schedule_cycle_total: 6
        bf_when_last_cycle: 7
        schedule_cycle_last: 1
        jobs_canceled: 8
        jobs_submitted: 9
        schedule_cycle_mean_depth: 1
    v0_0_38_reservation_purge_completed:
      type: object
      properties:
        time:
          type: integer
          description: amount of seconds this reservation will sit idle until it is
            revoked
      description: If PURGE_COMP flag is set the amount of seconds this reservation
        will sit idle until it is revoked
      example:
        time: 2
    v0_0_38_node_allocation_sockets:
      type: object
      properties:
        cores:
          type: object
          description: assignment status of each core by core id in each socket
      description: assignment status of each socket by numeric socket id
      example:
        cores: "{}"
    v0_0_38_meta_plugin:
      type: object
      properties:
        type:
          type: string
          description: ""
        name:
          type: string
          description: ""
      example:
        name: name
        type: type
    v0_0_38_meta_Slurm_version:
      type: object
      properties:
        major:
          type: integer
          description: ""
        micro:
          type: integer
          description: ""
        minor:
          type: integer
          description: ""
      example:
        major: 0
        minor: 1
        micro: 6
    v0_0_38_meta_Slurm:
      type: object
      properties:
        version:
          $ref: '#/components/schemas/v0_0_38_meta_Slurm_version'
        release:
          type: string
          description: version specifier
      description: Slurm information
      example:
        release: release
        version:
          major: 0
          minor: 1
          micro: 6
  securitySchemes:
    user:
      type: apiKey
      description: User name
      name: X-SLURM-USER-NAME
      in: header
      x-apikeyInfoFunc: swagger_server.controllers.authorization_controller.check_user
    token:
      type: apiKey
      description: User access token
      name: X-SLURM-USER-TOKEN
      in: header
      x-apikeyInfoFunc: swagger_server.controllers.authorization_controller.check_token

