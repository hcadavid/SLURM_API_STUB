from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class V0038DiagRpcm(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, message_type=None, type_id=None, count=None, average_time=None, total_time=None):  # noqa: E501
        """V0038DiagRpcm - a model defined in OpenAPI

        :param message_type: The message_type of this V0038DiagRpcm.  # noqa: E501
        :type message_type: str
        :param type_id: The type_id of this V0038DiagRpcm.  # noqa: E501
        :type type_id: int
        :param count: The count of this V0038DiagRpcm.  # noqa: E501
        :type count: int
        :param average_time: The average_time of this V0038DiagRpcm.  # noqa: E501
        :type average_time: int
        :param total_time: The total_time of this V0038DiagRpcm.  # noqa: E501
        :type total_time: int
        """
        self.openapi_types = {
            'message_type': str,
            'type_id': int,
            'count': int,
            'average_time': int,
            'total_time': int
        }

        self.attribute_map = {
            'message_type': 'message_type',
            'type_id': 'type_id',
            'count': 'count',
            'average_time': 'average_time',
            'total_time': 'total_time'
        }

        self._message_type = message_type
        self._type_id = type_id
        self._count = count
        self._average_time = average_time
        self._total_time = total_time

    @classmethod
    def from_dict(cls, dikt) -> 'V0038DiagRpcm':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The v0.0.38_diag_rpcm of this V0038DiagRpcm.  # noqa: E501
        :rtype: V0038DiagRpcm
        """
        return util.deserialize_model(dikt, cls)

    @property
    def message_type(self) -> str:
        """Gets the message_type of this V0038DiagRpcm.

        message type  # noqa: E501

        :return: The message_type of this V0038DiagRpcm.
        :rtype: str
        """
        return self._message_type

    @message_type.setter
    def message_type(self, message_type: str):
        """Sets the message_type of this V0038DiagRpcm.

        message type  # noqa: E501

        :param message_type: The message_type of this V0038DiagRpcm.
        :type message_type: str
        """

        self._message_type = message_type

    @property
    def type_id(self) -> int:
        """Gets the type_id of this V0038DiagRpcm.

        message type id  # noqa: E501

        :return: The type_id of this V0038DiagRpcm.
        :rtype: int
        """
        return self._type_id

    @type_id.setter
    def type_id(self, type_id: int):
        """Sets the type_id of this V0038DiagRpcm.

        message type id  # noqa: E501

        :param type_id: The type_id of this V0038DiagRpcm.
        :type type_id: int
        """

        self._type_id = type_id

    @property
    def count(self) -> int:
        """Gets the count of this V0038DiagRpcm.

        rpc count  # noqa: E501

        :return: The count of this V0038DiagRpcm.
        :rtype: int
        """
        return self._count

    @count.setter
    def count(self, count: int):
        """Sets the count of this V0038DiagRpcm.

        rpc count  # noqa: E501

        :param count: The count of this V0038DiagRpcm.
        :type count: int
        """

        self._count = count

    @property
    def average_time(self) -> int:
        """Gets the average_time of this V0038DiagRpcm.

        average time  # noqa: E501

        :return: The average_time of this V0038DiagRpcm.
        :rtype: int
        """
        return self._average_time

    @average_time.setter
    def average_time(self, average_time: int):
        """Sets the average_time of this V0038DiagRpcm.

        average time  # noqa: E501

        :param average_time: The average_time of this V0038DiagRpcm.
        :type average_time: int
        """

        self._average_time = average_time

    @property
    def total_time(self) -> int:
        """Gets the total_time of this V0038DiagRpcm.

        total time  # noqa: E501

        :return: The total_time of this V0038DiagRpcm.
        :rtype: int
        """
        return self._total_time

    @total_time.setter
    def total_time(self, total_time: int):
        """Sets the total_time of this V0038DiagRpcm.

        total time  # noqa: E501

        :param total_time: The total_time of this V0038DiagRpcm.
        :type total_time: int
        """

        self._total_time = total_time
