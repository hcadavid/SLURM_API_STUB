from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.v0038_diag_rpcm import V0038DiagRpcm
from openapi_server.models.v0038_diag_rpcu import V0038DiagRpcu
from openapi_server import util

from openapi_server.models.v0038_diag_rpcm import V0038DiagRpcm  # noqa: E501
from openapi_server.models.v0038_diag_rpcu import V0038DiagRpcu  # noqa: E501

class V0038DiagStatistics(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, parts_packed=None, req_time=None, req_time_start=None, server_thread_count=None, agent_queue_size=None, agent_count=None, agent_thread_count=None, dbd_agent_queue_size=None, gettimeofday_latency=None, schedule_cycle_max=None, schedule_cycle_last=None, schedule_cycle_total=None, schedule_cycle_mean=None, schedule_cycle_mean_depth=None, schedule_cycle_per_minute=None, schedule_queue_length=None, jobs_submitted=None, jobs_started=None, jobs_completed=None, jobs_canceled=None, jobs_failed=None, jobs_pending=None, jobs_running=None, job_states_ts=None, bf_backfilled_jobs=None, bf_last_backfilled_jobs=None, bf_backfilled_het_jobs=None, bf_cycle_counter=None, bf_cycle_mean=None, bf_cycle_max=None, bf_last_depth=None, bf_last_depth_try=None, bf_depth_mean=None, bf_depth_mean_try=None, bf_cycle_last=None, bf_queue_len=None, bf_queue_len_mean=None, bf_table_size=None, bf_table_size_mean=None, bf_when_last_cycle=None, bf_active=None, rpcs_by_message_type=None, rpcs_by_user=None):  # noqa: E501
        """V0038DiagStatistics - a model defined in OpenAPI

        :param parts_packed: The parts_packed of this V0038DiagStatistics.  # noqa: E501
        :type parts_packed: int
        :param req_time: The req_time of this V0038DiagStatistics.  # noqa: E501
        :type req_time: int
        :param req_time_start: The req_time_start of this V0038DiagStatistics.  # noqa: E501
        :type req_time_start: int
        :param server_thread_count: The server_thread_count of this V0038DiagStatistics.  # noqa: E501
        :type server_thread_count: int
        :param agent_queue_size: The agent_queue_size of this V0038DiagStatistics.  # noqa: E501
        :type agent_queue_size: int
        :param agent_count: The agent_count of this V0038DiagStatistics.  # noqa: E501
        :type agent_count: int
        :param agent_thread_count: The agent_thread_count of this V0038DiagStatistics.  # noqa: E501
        :type agent_thread_count: int
        :param dbd_agent_queue_size: The dbd_agent_queue_size of this V0038DiagStatistics.  # noqa: E501
        :type dbd_agent_queue_size: int
        :param gettimeofday_latency: The gettimeofday_latency of this V0038DiagStatistics.  # noqa: E501
        :type gettimeofday_latency: int
        :param schedule_cycle_max: The schedule_cycle_max of this V0038DiagStatistics.  # noqa: E501
        :type schedule_cycle_max: int
        :param schedule_cycle_last: The schedule_cycle_last of this V0038DiagStatistics.  # noqa: E501
        :type schedule_cycle_last: int
        :param schedule_cycle_total: The schedule_cycle_total of this V0038DiagStatistics.  # noqa: E501
        :type schedule_cycle_total: int
        :param schedule_cycle_mean: The schedule_cycle_mean of this V0038DiagStatistics.  # noqa: E501
        :type schedule_cycle_mean: int
        :param schedule_cycle_mean_depth: The schedule_cycle_mean_depth of this V0038DiagStatistics.  # noqa: E501
        :type schedule_cycle_mean_depth: int
        :param schedule_cycle_per_minute: The schedule_cycle_per_minute of this V0038DiagStatistics.  # noqa: E501
        :type schedule_cycle_per_minute: int
        :param schedule_queue_length: The schedule_queue_length of this V0038DiagStatistics.  # noqa: E501
        :type schedule_queue_length: int
        :param jobs_submitted: The jobs_submitted of this V0038DiagStatistics.  # noqa: E501
        :type jobs_submitted: int
        :param jobs_started: The jobs_started of this V0038DiagStatistics.  # noqa: E501
        :type jobs_started: int
        :param jobs_completed: The jobs_completed of this V0038DiagStatistics.  # noqa: E501
        :type jobs_completed: int
        :param jobs_canceled: The jobs_canceled of this V0038DiagStatistics.  # noqa: E501
        :type jobs_canceled: int
        :param jobs_failed: The jobs_failed of this V0038DiagStatistics.  # noqa: E501
        :type jobs_failed: int
        :param jobs_pending: The jobs_pending of this V0038DiagStatistics.  # noqa: E501
        :type jobs_pending: int
        :param jobs_running: The jobs_running of this V0038DiagStatistics.  # noqa: E501
        :type jobs_running: int
        :param job_states_ts: The job_states_ts of this V0038DiagStatistics.  # noqa: E501
        :type job_states_ts: int
        :param bf_backfilled_jobs: The bf_backfilled_jobs of this V0038DiagStatistics.  # noqa: E501
        :type bf_backfilled_jobs: int
        :param bf_last_backfilled_jobs: The bf_last_backfilled_jobs of this V0038DiagStatistics.  # noqa: E501
        :type bf_last_backfilled_jobs: int
        :param bf_backfilled_het_jobs: The bf_backfilled_het_jobs of this V0038DiagStatistics.  # noqa: E501
        :type bf_backfilled_het_jobs: int
        :param bf_cycle_counter: The bf_cycle_counter of this V0038DiagStatistics.  # noqa: E501
        :type bf_cycle_counter: int
        :param bf_cycle_mean: The bf_cycle_mean of this V0038DiagStatistics.  # noqa: E501
        :type bf_cycle_mean: int
        :param bf_cycle_max: The bf_cycle_max of this V0038DiagStatistics.  # noqa: E501
        :type bf_cycle_max: int
        :param bf_last_depth: The bf_last_depth of this V0038DiagStatistics.  # noqa: E501
        :type bf_last_depth: int
        :param bf_last_depth_try: The bf_last_depth_try of this V0038DiagStatistics.  # noqa: E501
        :type bf_last_depth_try: int
        :param bf_depth_mean: The bf_depth_mean of this V0038DiagStatistics.  # noqa: E501
        :type bf_depth_mean: int
        :param bf_depth_mean_try: The bf_depth_mean_try of this V0038DiagStatistics.  # noqa: E501
        :type bf_depth_mean_try: int
        :param bf_cycle_last: The bf_cycle_last of this V0038DiagStatistics.  # noqa: E501
        :type bf_cycle_last: int
        :param bf_queue_len: The bf_queue_len of this V0038DiagStatistics.  # noqa: E501
        :type bf_queue_len: int
        :param bf_queue_len_mean: The bf_queue_len_mean of this V0038DiagStatistics.  # noqa: E501
        :type bf_queue_len_mean: int
        :param bf_table_size: The bf_table_size of this V0038DiagStatistics.  # noqa: E501
        :type bf_table_size: int
        :param bf_table_size_mean: The bf_table_size_mean of this V0038DiagStatistics.  # noqa: E501
        :type bf_table_size_mean: int
        :param bf_when_last_cycle: The bf_when_last_cycle of this V0038DiagStatistics.  # noqa: E501
        :type bf_when_last_cycle: int
        :param bf_active: The bf_active of this V0038DiagStatistics.  # noqa: E501
        :type bf_active: bool
        :param rpcs_by_message_type: The rpcs_by_message_type of this V0038DiagStatistics.  # noqa: E501
        :type rpcs_by_message_type: List[V0038DiagRpcm]
        :param rpcs_by_user: The rpcs_by_user of this V0038DiagStatistics.  # noqa: E501
        :type rpcs_by_user: List[V0038DiagRpcu]
        """
        self.openapi_types = {
            'parts_packed': int,
            'req_time': int,
            'req_time_start': int,
            'server_thread_count': int,
            'agent_queue_size': int,
            'agent_count': int,
            'agent_thread_count': int,
            'dbd_agent_queue_size': int,
            'gettimeofday_latency': int,
            'schedule_cycle_max': int,
            'schedule_cycle_last': int,
            'schedule_cycle_total': int,
            'schedule_cycle_mean': int,
            'schedule_cycle_mean_depth': int,
            'schedule_cycle_per_minute': int,
            'schedule_queue_length': int,
            'jobs_submitted': int,
            'jobs_started': int,
            'jobs_completed': int,
            'jobs_canceled': int,
            'jobs_failed': int,
            'jobs_pending': int,
            'jobs_running': int,
            'job_states_ts': int,
            'bf_backfilled_jobs': int,
            'bf_last_backfilled_jobs': int,
            'bf_backfilled_het_jobs': int,
            'bf_cycle_counter': int,
            'bf_cycle_mean': int,
            'bf_cycle_max': int,
            'bf_last_depth': int,
            'bf_last_depth_try': int,
            'bf_depth_mean': int,
            'bf_depth_mean_try': int,
            'bf_cycle_last': int,
            'bf_queue_len': int,
            'bf_queue_len_mean': int,
            'bf_table_size': int,
            'bf_table_size_mean': int,
            'bf_when_last_cycle': int,
            'bf_active': bool,
            'rpcs_by_message_type': List[V0038DiagRpcm],
            'rpcs_by_user': List[V0038DiagRpcu]
        }

        self.attribute_map = {
            'parts_packed': 'parts_packed',
            'req_time': 'req_time',
            'req_time_start': 'req_time_start',
            'server_thread_count': 'server_thread_count',
            'agent_queue_size': 'agent_queue_size',
            'agent_count': 'agent_count',
            'agent_thread_count': 'agent_thread_count',
            'dbd_agent_queue_size': 'dbd_agent_queue_size',
            'gettimeofday_latency': 'gettimeofday_latency',
            'schedule_cycle_max': 'schedule_cycle_max',
            'schedule_cycle_last': 'schedule_cycle_last',
            'schedule_cycle_total': 'schedule_cycle_total',
            'schedule_cycle_mean': 'schedule_cycle_mean',
            'schedule_cycle_mean_depth': 'schedule_cycle_mean_depth',
            'schedule_cycle_per_minute': 'schedule_cycle_per_minute',
            'schedule_queue_length': 'schedule_queue_length',
            'jobs_submitted': 'jobs_submitted',
            'jobs_started': 'jobs_started',
            'jobs_completed': 'jobs_completed',
            'jobs_canceled': 'jobs_canceled',
            'jobs_failed': 'jobs_failed',
            'jobs_pending': 'jobs_pending',
            'jobs_running': 'jobs_running',
            'job_states_ts': 'job_states_ts',
            'bf_backfilled_jobs': 'bf_backfilled_jobs',
            'bf_last_backfilled_jobs': 'bf_last_backfilled_jobs',
            'bf_backfilled_het_jobs': 'bf_backfilled_het_jobs',
            'bf_cycle_counter': 'bf_cycle_counter',
            'bf_cycle_mean': 'bf_cycle_mean',
            'bf_cycle_max': 'bf_cycle_max',
            'bf_last_depth': 'bf_last_depth',
            'bf_last_depth_try': 'bf_last_depth_try',
            'bf_depth_mean': 'bf_depth_mean',
            'bf_depth_mean_try': 'bf_depth_mean_try',
            'bf_cycle_last': 'bf_cycle_last',
            'bf_queue_len': 'bf_queue_len',
            'bf_queue_len_mean': 'bf_queue_len_mean',
            'bf_table_size': 'bf_table_size',
            'bf_table_size_mean': 'bf_table_size_mean',
            'bf_when_last_cycle': 'bf_when_last_cycle',
            'bf_active': 'bf_active',
            'rpcs_by_message_type': 'rpcs_by_message_type',
            'rpcs_by_user': 'rpcs_by_user'
        }

        self._parts_packed = parts_packed
        self._req_time = req_time
        self._req_time_start = req_time_start
        self._server_thread_count = server_thread_count
        self._agent_queue_size = agent_queue_size
        self._agent_count = agent_count
        self._agent_thread_count = agent_thread_count
        self._dbd_agent_queue_size = dbd_agent_queue_size
        self._gettimeofday_latency = gettimeofday_latency
        self._schedule_cycle_max = schedule_cycle_max
        self._schedule_cycle_last = schedule_cycle_last
        self._schedule_cycle_total = schedule_cycle_total
        self._schedule_cycle_mean = schedule_cycle_mean
        self._schedule_cycle_mean_depth = schedule_cycle_mean_depth
        self._schedule_cycle_per_minute = schedule_cycle_per_minute
        self._schedule_queue_length = schedule_queue_length
        self._jobs_submitted = jobs_submitted
        self._jobs_started = jobs_started
        self._jobs_completed = jobs_completed
        self._jobs_canceled = jobs_canceled
        self._jobs_failed = jobs_failed
        self._jobs_pending = jobs_pending
        self._jobs_running = jobs_running
        self._job_states_ts = job_states_ts
        self._bf_backfilled_jobs = bf_backfilled_jobs
        self._bf_last_backfilled_jobs = bf_last_backfilled_jobs
        self._bf_backfilled_het_jobs = bf_backfilled_het_jobs
        self._bf_cycle_counter = bf_cycle_counter
        self._bf_cycle_mean = bf_cycle_mean
        self._bf_cycle_max = bf_cycle_max
        self._bf_last_depth = bf_last_depth
        self._bf_last_depth_try = bf_last_depth_try
        self._bf_depth_mean = bf_depth_mean
        self._bf_depth_mean_try = bf_depth_mean_try
        self._bf_cycle_last = bf_cycle_last
        self._bf_queue_len = bf_queue_len
        self._bf_queue_len_mean = bf_queue_len_mean
        self._bf_table_size = bf_table_size
        self._bf_table_size_mean = bf_table_size_mean
        self._bf_when_last_cycle = bf_when_last_cycle
        self._bf_active = bf_active
        self._rpcs_by_message_type = rpcs_by_message_type
        self._rpcs_by_user = rpcs_by_user

    @classmethod
    def from_dict(cls, dikt) -> 'V0038DiagStatistics':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The v0_0_38_diag_statistics of this V0038DiagStatistics.  # noqa: E501
        :rtype: V0038DiagStatistics
        """
        return util.deserialize_model(dikt, cls)

    @property
    def parts_packed(self) -> int:
        """Gets the parts_packed of this V0038DiagStatistics.

        partition records packed  # noqa: E501

        :return: The parts_packed of this V0038DiagStatistics.
        :rtype: int
        """
        return self._parts_packed

    @parts_packed.setter
    def parts_packed(self, parts_packed: int):
        """Sets the parts_packed of this V0038DiagStatistics.

        partition records packed  # noqa: E501

        :param parts_packed: The parts_packed of this V0038DiagStatistics.
        :type parts_packed: int
        """

        self._parts_packed = parts_packed

    @property
    def req_time(self) -> int:
        """Gets the req_time of this V0038DiagStatistics.

        generation time  # noqa: E501

        :return: The req_time of this V0038DiagStatistics.
        :rtype: int
        """
        return self._req_time

    @req_time.setter
    def req_time(self, req_time: int):
        """Sets the req_time of this V0038DiagStatistics.

        generation time  # noqa: E501

        :param req_time: The req_time of this V0038DiagStatistics.
        :type req_time: int
        """

        self._req_time = req_time

    @property
    def req_time_start(self) -> int:
        """Gets the req_time_start of this V0038DiagStatistics.

        data since  # noqa: E501

        :return: The req_time_start of this V0038DiagStatistics.
        :rtype: int
        """
        return self._req_time_start

    @req_time_start.setter
    def req_time_start(self, req_time_start: int):
        """Sets the req_time_start of this V0038DiagStatistics.

        data since  # noqa: E501

        :param req_time_start: The req_time_start of this V0038DiagStatistics.
        :type req_time_start: int
        """

        self._req_time_start = req_time_start

    @property
    def server_thread_count(self) -> int:
        """Gets the server_thread_count of this V0038DiagStatistics.

        Server thread count  # noqa: E501

        :return: The server_thread_count of this V0038DiagStatistics.
        :rtype: int
        """
        return self._server_thread_count

    @server_thread_count.setter
    def server_thread_count(self, server_thread_count: int):
        """Sets the server_thread_count of this V0038DiagStatistics.

        Server thread count  # noqa: E501

        :param server_thread_count: The server_thread_count of this V0038DiagStatistics.
        :type server_thread_count: int
        """

        self._server_thread_count = server_thread_count

    @property
    def agent_queue_size(self) -> int:
        """Gets the agent_queue_size of this V0038DiagStatistics.

        Agent queue size  # noqa: E501

        :return: The agent_queue_size of this V0038DiagStatistics.
        :rtype: int
        """
        return self._agent_queue_size

    @agent_queue_size.setter
    def agent_queue_size(self, agent_queue_size: int):
        """Sets the agent_queue_size of this V0038DiagStatistics.

        Agent queue size  # noqa: E501

        :param agent_queue_size: The agent_queue_size of this V0038DiagStatistics.
        :type agent_queue_size: int
        """

        self._agent_queue_size = agent_queue_size

    @property
    def agent_count(self) -> int:
        """Gets the agent_count of this V0038DiagStatistics.

        Agent count  # noqa: E501

        :return: The agent_count of this V0038DiagStatistics.
        :rtype: int
        """
        return self._agent_count

    @agent_count.setter
    def agent_count(self, agent_count: int):
        """Sets the agent_count of this V0038DiagStatistics.

        Agent count  # noqa: E501

        :param agent_count: The agent_count of this V0038DiagStatistics.
        :type agent_count: int
        """

        self._agent_count = agent_count

    @property
    def agent_thread_count(self) -> int:
        """Gets the agent_thread_count of this V0038DiagStatistics.

        Agent thread count  # noqa: E501

        :return: The agent_thread_count of this V0038DiagStatistics.
        :rtype: int
        """
        return self._agent_thread_count

    @agent_thread_count.setter
    def agent_thread_count(self, agent_thread_count: int):
        """Sets the agent_thread_count of this V0038DiagStatistics.

        Agent thread count  # noqa: E501

        :param agent_thread_count: The agent_thread_count of this V0038DiagStatistics.
        :type agent_thread_count: int
        """

        self._agent_thread_count = agent_thread_count

    @property
    def dbd_agent_queue_size(self) -> int:
        """Gets the dbd_agent_queue_size of this V0038DiagStatistics.

        DBD Agent queue size  # noqa: E501

        :return: The dbd_agent_queue_size of this V0038DiagStatistics.
        :rtype: int
        """
        return self._dbd_agent_queue_size

    @dbd_agent_queue_size.setter
    def dbd_agent_queue_size(self, dbd_agent_queue_size: int):
        """Sets the dbd_agent_queue_size of this V0038DiagStatistics.

        DBD Agent queue size  # noqa: E501

        :param dbd_agent_queue_size: The dbd_agent_queue_size of this V0038DiagStatistics.
        :type dbd_agent_queue_size: int
        """

        self._dbd_agent_queue_size = dbd_agent_queue_size

    @property
    def gettimeofday_latency(self) -> int:
        """Gets the gettimeofday_latency of this V0038DiagStatistics.

        Latency for 1000 calls to gettimeofday()  # noqa: E501

        :return: The gettimeofday_latency of this V0038DiagStatistics.
        :rtype: int
        """
        return self._gettimeofday_latency

    @gettimeofday_latency.setter
    def gettimeofday_latency(self, gettimeofday_latency: int):
        """Sets the gettimeofday_latency of this V0038DiagStatistics.

        Latency for 1000 calls to gettimeofday()  # noqa: E501

        :param gettimeofday_latency: The gettimeofday_latency of this V0038DiagStatistics.
        :type gettimeofday_latency: int
        """

        self._gettimeofday_latency = gettimeofday_latency

    @property
    def schedule_cycle_max(self) -> int:
        """Gets the schedule_cycle_max of this V0038DiagStatistics.

        Main Schedule max cycle  # noqa: E501

        :return: The schedule_cycle_max of this V0038DiagStatistics.
        :rtype: int
        """
        return self._schedule_cycle_max

    @schedule_cycle_max.setter
    def schedule_cycle_max(self, schedule_cycle_max: int):
        """Sets the schedule_cycle_max of this V0038DiagStatistics.

        Main Schedule max cycle  # noqa: E501

        :param schedule_cycle_max: The schedule_cycle_max of this V0038DiagStatistics.
        :type schedule_cycle_max: int
        """

        self._schedule_cycle_max = schedule_cycle_max

    @property
    def schedule_cycle_last(self) -> int:
        """Gets the schedule_cycle_last of this V0038DiagStatistics.

        Main Schedule last cycle  # noqa: E501

        :return: The schedule_cycle_last of this V0038DiagStatistics.
        :rtype: int
        """
        return self._schedule_cycle_last

    @schedule_cycle_last.setter
    def schedule_cycle_last(self, schedule_cycle_last: int):
        """Sets the schedule_cycle_last of this V0038DiagStatistics.

        Main Schedule last cycle  # noqa: E501

        :param schedule_cycle_last: The schedule_cycle_last of this V0038DiagStatistics.
        :type schedule_cycle_last: int
        """

        self._schedule_cycle_last = schedule_cycle_last

    @property
    def schedule_cycle_total(self) -> int:
        """Gets the schedule_cycle_total of this V0038DiagStatistics.

        Main Schedule cycle iterations  # noqa: E501

        :return: The schedule_cycle_total of this V0038DiagStatistics.
        :rtype: int
        """
        return self._schedule_cycle_total

    @schedule_cycle_total.setter
    def schedule_cycle_total(self, schedule_cycle_total: int):
        """Sets the schedule_cycle_total of this V0038DiagStatistics.

        Main Schedule cycle iterations  # noqa: E501

        :param schedule_cycle_total: The schedule_cycle_total of this V0038DiagStatistics.
        :type schedule_cycle_total: int
        """

        self._schedule_cycle_total = schedule_cycle_total

    @property
    def schedule_cycle_mean(self) -> int:
        """Gets the schedule_cycle_mean of this V0038DiagStatistics.

        Average time for Schedule Max cycle  # noqa: E501

        :return: The schedule_cycle_mean of this V0038DiagStatistics.
        :rtype: int
        """
        return self._schedule_cycle_mean

    @schedule_cycle_mean.setter
    def schedule_cycle_mean(self, schedule_cycle_mean: int):
        """Sets the schedule_cycle_mean of this V0038DiagStatistics.

        Average time for Schedule Max cycle  # noqa: E501

        :param schedule_cycle_mean: The schedule_cycle_mean of this V0038DiagStatistics.
        :type schedule_cycle_mean: int
        """

        self._schedule_cycle_mean = schedule_cycle_mean

    @property
    def schedule_cycle_mean_depth(self) -> int:
        """Gets the schedule_cycle_mean_depth of this V0038DiagStatistics.

        Average depth for Schedule Max cycle  # noqa: E501

        :return: The schedule_cycle_mean_depth of this V0038DiagStatistics.
        :rtype: int
        """
        return self._schedule_cycle_mean_depth

    @schedule_cycle_mean_depth.setter
    def schedule_cycle_mean_depth(self, schedule_cycle_mean_depth: int):
        """Sets the schedule_cycle_mean_depth of this V0038DiagStatistics.

        Average depth for Schedule Max cycle  # noqa: E501

        :param schedule_cycle_mean_depth: The schedule_cycle_mean_depth of this V0038DiagStatistics.
        :type schedule_cycle_mean_depth: int
        """

        self._schedule_cycle_mean_depth = schedule_cycle_mean_depth

    @property
    def schedule_cycle_per_minute(self) -> int:
        """Gets the schedule_cycle_per_minute of this V0038DiagStatistics.

        Main Schedule Cycles per minute  # noqa: E501

        :return: The schedule_cycle_per_minute of this V0038DiagStatistics.
        :rtype: int
        """
        return self._schedule_cycle_per_minute

    @schedule_cycle_per_minute.setter
    def schedule_cycle_per_minute(self, schedule_cycle_per_minute: int):
        """Sets the schedule_cycle_per_minute of this V0038DiagStatistics.

        Main Schedule Cycles per minute  # noqa: E501

        :param schedule_cycle_per_minute: The schedule_cycle_per_minute of this V0038DiagStatistics.
        :type schedule_cycle_per_minute: int
        """

        self._schedule_cycle_per_minute = schedule_cycle_per_minute

    @property
    def schedule_queue_length(self) -> int:
        """Gets the schedule_queue_length of this V0038DiagStatistics.

        Main Schedule Last queue length  # noqa: E501

        :return: The schedule_queue_length of this V0038DiagStatistics.
        :rtype: int
        """
        return self._schedule_queue_length

    @schedule_queue_length.setter
    def schedule_queue_length(self, schedule_queue_length: int):
        """Sets the schedule_queue_length of this V0038DiagStatistics.

        Main Schedule Last queue length  # noqa: E501

        :param schedule_queue_length: The schedule_queue_length of this V0038DiagStatistics.
        :type schedule_queue_length: int
        """

        self._schedule_queue_length = schedule_queue_length

    @property
    def jobs_submitted(self) -> int:
        """Gets the jobs_submitted of this V0038DiagStatistics.

        Job submitted  # noqa: E501

        :return: The jobs_submitted of this V0038DiagStatistics.
        :rtype: int
        """
        return self._jobs_submitted

    @jobs_submitted.setter
    def jobs_submitted(self, jobs_submitted: int):
        """Sets the jobs_submitted of this V0038DiagStatistics.

        Job submitted  # noqa: E501

        :param jobs_submitted: The jobs_submitted of this V0038DiagStatistics.
        :type jobs_submitted: int
        """

        self._jobs_submitted = jobs_submitted

    @property
    def jobs_started(self) -> int:
        """Gets the jobs_started of this V0038DiagStatistics.

        Job started  # noqa: E501

        :return: The jobs_started of this V0038DiagStatistics.
        :rtype: int
        """
        return self._jobs_started

    @jobs_started.setter
    def jobs_started(self, jobs_started: int):
        """Sets the jobs_started of this V0038DiagStatistics.

        Job started  # noqa: E501

        :param jobs_started: The jobs_started of this V0038DiagStatistics.
        :type jobs_started: int
        """

        self._jobs_started = jobs_started

    @property
    def jobs_completed(self) -> int:
        """Gets the jobs_completed of this V0038DiagStatistics.

        Job completed  # noqa: E501

        :return: The jobs_completed of this V0038DiagStatistics.
        :rtype: int
        """
        return self._jobs_completed

    @jobs_completed.setter
    def jobs_completed(self, jobs_completed: int):
        """Sets the jobs_completed of this V0038DiagStatistics.

        Job completed  # noqa: E501

        :param jobs_completed: The jobs_completed of this V0038DiagStatistics.
        :type jobs_completed: int
        """

        self._jobs_completed = jobs_completed

    @property
    def jobs_canceled(self) -> int:
        """Gets the jobs_canceled of this V0038DiagStatistics.

        Job cancelled  # noqa: E501

        :return: The jobs_canceled of this V0038DiagStatistics.
        :rtype: int
        """
        return self._jobs_canceled

    @jobs_canceled.setter
    def jobs_canceled(self, jobs_canceled: int):
        """Sets the jobs_canceled of this V0038DiagStatistics.

        Job cancelled  # noqa: E501

        :param jobs_canceled: The jobs_canceled of this V0038DiagStatistics.
        :type jobs_canceled: int
        """

        self._jobs_canceled = jobs_canceled

    @property
    def jobs_failed(self) -> int:
        """Gets the jobs_failed of this V0038DiagStatistics.

        Job failed  # noqa: E501

        :return: The jobs_failed of this V0038DiagStatistics.
        :rtype: int
        """
        return self._jobs_failed

    @jobs_failed.setter
    def jobs_failed(self, jobs_failed: int):
        """Sets the jobs_failed of this V0038DiagStatistics.

        Job failed  # noqa: E501

        :param jobs_failed: The jobs_failed of this V0038DiagStatistics.
        :type jobs_failed: int
        """

        self._jobs_failed = jobs_failed

    @property
    def jobs_pending(self) -> int:
        """Gets the jobs_pending of this V0038DiagStatistics.

        Job pending  # noqa: E501

        :return: The jobs_pending of this V0038DiagStatistics.
        :rtype: int
        """
        return self._jobs_pending

    @jobs_pending.setter
    def jobs_pending(self, jobs_pending: int):
        """Sets the jobs_pending of this V0038DiagStatistics.

        Job pending  # noqa: E501

        :param jobs_pending: The jobs_pending of this V0038DiagStatistics.
        :type jobs_pending: int
        """

        self._jobs_pending = jobs_pending

    @property
    def jobs_running(self) -> int:
        """Gets the jobs_running of this V0038DiagStatistics.

        Job running  # noqa: E501

        :return: The jobs_running of this V0038DiagStatistics.
        :rtype: int
        """
        return self._jobs_running

    @jobs_running.setter
    def jobs_running(self, jobs_running: int):
        """Sets the jobs_running of this V0038DiagStatistics.

        Job running  # noqa: E501

        :param jobs_running: The jobs_running of this V0038DiagStatistics.
        :type jobs_running: int
        """

        self._jobs_running = jobs_running

    @property
    def job_states_ts(self) -> int:
        """Gets the job_states_ts of this V0038DiagStatistics.

        Job states timestamp  # noqa: E501

        :return: The job_states_ts of this V0038DiagStatistics.
        :rtype: int
        """
        return self._job_states_ts

    @job_states_ts.setter
    def job_states_ts(self, job_states_ts: int):
        """Sets the job_states_ts of this V0038DiagStatistics.

        Job states timestamp  # noqa: E501

        :param job_states_ts: The job_states_ts of this V0038DiagStatistics.
        :type job_states_ts: int
        """

        self._job_states_ts = job_states_ts

    @property
    def bf_backfilled_jobs(self) -> int:
        """Gets the bf_backfilled_jobs of this V0038DiagStatistics.

        Total backfilled jobs (since last slurm start)  # noqa: E501

        :return: The bf_backfilled_jobs of this V0038DiagStatistics.
        :rtype: int
        """
        return self._bf_backfilled_jobs

    @bf_backfilled_jobs.setter
    def bf_backfilled_jobs(self, bf_backfilled_jobs: int):
        """Sets the bf_backfilled_jobs of this V0038DiagStatistics.

        Total backfilled jobs (since last slurm start)  # noqa: E501

        :param bf_backfilled_jobs: The bf_backfilled_jobs of this V0038DiagStatistics.
        :type bf_backfilled_jobs: int
        """

        self._bf_backfilled_jobs = bf_backfilled_jobs

    @property
    def bf_last_backfilled_jobs(self) -> int:
        """Gets the bf_last_backfilled_jobs of this V0038DiagStatistics.

        Total backfilled jobs (since last stats cycle start)  # noqa: E501

        :return: The bf_last_backfilled_jobs of this V0038DiagStatistics.
        :rtype: int
        """
        return self._bf_last_backfilled_jobs

    @bf_last_backfilled_jobs.setter
    def bf_last_backfilled_jobs(self, bf_last_backfilled_jobs: int):
        """Sets the bf_last_backfilled_jobs of this V0038DiagStatistics.

        Total backfilled jobs (since last stats cycle start)  # noqa: E501

        :param bf_last_backfilled_jobs: The bf_last_backfilled_jobs of this V0038DiagStatistics.
        :type bf_last_backfilled_jobs: int
        """

        self._bf_last_backfilled_jobs = bf_last_backfilled_jobs

    @property
    def bf_backfilled_het_jobs(self) -> int:
        """Gets the bf_backfilled_het_jobs of this V0038DiagStatistics.

        Total backfilled heterogeneous job components  # noqa: E501

        :return: The bf_backfilled_het_jobs of this V0038DiagStatistics.
        :rtype: int
        """
        return self._bf_backfilled_het_jobs

    @bf_backfilled_het_jobs.setter
    def bf_backfilled_het_jobs(self, bf_backfilled_het_jobs: int):
        """Sets the bf_backfilled_het_jobs of this V0038DiagStatistics.

        Total backfilled heterogeneous job components  # noqa: E501

        :param bf_backfilled_het_jobs: The bf_backfilled_het_jobs of this V0038DiagStatistics.
        :type bf_backfilled_het_jobs: int
        """

        self._bf_backfilled_het_jobs = bf_backfilled_het_jobs

    @property
    def bf_cycle_counter(self) -> int:
        """Gets the bf_cycle_counter of this V0038DiagStatistics.

        Backfill Schedule Total cycles  # noqa: E501

        :return: The bf_cycle_counter of this V0038DiagStatistics.
        :rtype: int
        """
        return self._bf_cycle_counter

    @bf_cycle_counter.setter
    def bf_cycle_counter(self, bf_cycle_counter: int):
        """Sets the bf_cycle_counter of this V0038DiagStatistics.

        Backfill Schedule Total cycles  # noqa: E501

        :param bf_cycle_counter: The bf_cycle_counter of this V0038DiagStatistics.
        :type bf_cycle_counter: int
        """

        self._bf_cycle_counter = bf_cycle_counter

    @property
    def bf_cycle_mean(self) -> int:
        """Gets the bf_cycle_mean of this V0038DiagStatistics.

        Backfill Schedule Mean cycle  # noqa: E501

        :return: The bf_cycle_mean of this V0038DiagStatistics.
        :rtype: int
        """
        return self._bf_cycle_mean

    @bf_cycle_mean.setter
    def bf_cycle_mean(self, bf_cycle_mean: int):
        """Sets the bf_cycle_mean of this V0038DiagStatistics.

        Backfill Schedule Mean cycle  # noqa: E501

        :param bf_cycle_mean: The bf_cycle_mean of this V0038DiagStatistics.
        :type bf_cycle_mean: int
        """

        self._bf_cycle_mean = bf_cycle_mean

    @property
    def bf_cycle_max(self) -> int:
        """Gets the bf_cycle_max of this V0038DiagStatistics.

        Backfill Schedule Max cycle time  # noqa: E501

        :return: The bf_cycle_max of this V0038DiagStatistics.
        :rtype: int
        """
        return self._bf_cycle_max

    @bf_cycle_max.setter
    def bf_cycle_max(self, bf_cycle_max: int):
        """Sets the bf_cycle_max of this V0038DiagStatistics.

        Backfill Schedule Max cycle time  # noqa: E501

        :param bf_cycle_max: The bf_cycle_max of this V0038DiagStatistics.
        :type bf_cycle_max: int
        """

        self._bf_cycle_max = bf_cycle_max

    @property
    def bf_last_depth(self) -> int:
        """Gets the bf_last_depth of this V0038DiagStatistics.

        Backfill Schedule Last depth cycle  # noqa: E501

        :return: The bf_last_depth of this V0038DiagStatistics.
        :rtype: int
        """
        return self._bf_last_depth

    @bf_last_depth.setter
    def bf_last_depth(self, bf_last_depth: int):
        """Sets the bf_last_depth of this V0038DiagStatistics.

        Backfill Schedule Last depth cycle  # noqa: E501

        :param bf_last_depth: The bf_last_depth of this V0038DiagStatistics.
        :type bf_last_depth: int
        """

        self._bf_last_depth = bf_last_depth

    @property
    def bf_last_depth_try(self) -> int:
        """Gets the bf_last_depth_try of this V0038DiagStatistics.

        Backfill Schedule Mean cycle (try sched)  # noqa: E501

        :return: The bf_last_depth_try of this V0038DiagStatistics.
        :rtype: int
        """
        return self._bf_last_depth_try

    @bf_last_depth_try.setter
    def bf_last_depth_try(self, bf_last_depth_try: int):
        """Sets the bf_last_depth_try of this V0038DiagStatistics.

        Backfill Schedule Mean cycle (try sched)  # noqa: E501

        :param bf_last_depth_try: The bf_last_depth_try of this V0038DiagStatistics.
        :type bf_last_depth_try: int
        """

        self._bf_last_depth_try = bf_last_depth_try

    @property
    def bf_depth_mean(self) -> int:
        """Gets the bf_depth_mean of this V0038DiagStatistics.

        Backfill Schedule Depth Mean  # noqa: E501

        :return: The bf_depth_mean of this V0038DiagStatistics.
        :rtype: int
        """
        return self._bf_depth_mean

    @bf_depth_mean.setter
    def bf_depth_mean(self, bf_depth_mean: int):
        """Sets the bf_depth_mean of this V0038DiagStatistics.

        Backfill Schedule Depth Mean  # noqa: E501

        :param bf_depth_mean: The bf_depth_mean of this V0038DiagStatistics.
        :type bf_depth_mean: int
        """

        self._bf_depth_mean = bf_depth_mean

    @property
    def bf_depth_mean_try(self) -> int:
        """Gets the bf_depth_mean_try of this V0038DiagStatistics.

        Backfill Schedule Depth Mean (try sched)  # noqa: E501

        :return: The bf_depth_mean_try of this V0038DiagStatistics.
        :rtype: int
        """
        return self._bf_depth_mean_try

    @bf_depth_mean_try.setter
    def bf_depth_mean_try(self, bf_depth_mean_try: int):
        """Sets the bf_depth_mean_try of this V0038DiagStatistics.

        Backfill Schedule Depth Mean (try sched)  # noqa: E501

        :param bf_depth_mean_try: The bf_depth_mean_try of this V0038DiagStatistics.
        :type bf_depth_mean_try: int
        """

        self._bf_depth_mean_try = bf_depth_mean_try

    @property
    def bf_cycle_last(self) -> int:
        """Gets the bf_cycle_last of this V0038DiagStatistics.

        Backfill Schedule Last cycle time  # noqa: E501

        :return: The bf_cycle_last of this V0038DiagStatistics.
        :rtype: int
        """
        return self._bf_cycle_last

    @bf_cycle_last.setter
    def bf_cycle_last(self, bf_cycle_last: int):
        """Sets the bf_cycle_last of this V0038DiagStatistics.

        Backfill Schedule Last cycle time  # noqa: E501

        :param bf_cycle_last: The bf_cycle_last of this V0038DiagStatistics.
        :type bf_cycle_last: int
        """

        self._bf_cycle_last = bf_cycle_last

    @property
    def bf_queue_len(self) -> int:
        """Gets the bf_queue_len of this V0038DiagStatistics.

        Backfill Schedule Last queue length  # noqa: E501

        :return: The bf_queue_len of this V0038DiagStatistics.
        :rtype: int
        """
        return self._bf_queue_len

    @bf_queue_len.setter
    def bf_queue_len(self, bf_queue_len: int):
        """Sets the bf_queue_len of this V0038DiagStatistics.

        Backfill Schedule Last queue length  # noqa: E501

        :param bf_queue_len: The bf_queue_len of this V0038DiagStatistics.
        :type bf_queue_len: int
        """

        self._bf_queue_len = bf_queue_len

    @property
    def bf_queue_len_mean(self) -> int:
        """Gets the bf_queue_len_mean of this V0038DiagStatistics.

        Backfill Schedule Mean queue length  # noqa: E501

        :return: The bf_queue_len_mean of this V0038DiagStatistics.
        :rtype: int
        """
        return self._bf_queue_len_mean

    @bf_queue_len_mean.setter
    def bf_queue_len_mean(self, bf_queue_len_mean: int):
        """Sets the bf_queue_len_mean of this V0038DiagStatistics.

        Backfill Schedule Mean queue length  # noqa: E501

        :param bf_queue_len_mean: The bf_queue_len_mean of this V0038DiagStatistics.
        :type bf_queue_len_mean: int
        """

        self._bf_queue_len_mean = bf_queue_len_mean

    @property
    def bf_table_size(self) -> int:
        """Gets the bf_table_size of this V0038DiagStatistics.

        Backfill Schedule Last table size  # noqa: E501

        :return: The bf_table_size of this V0038DiagStatistics.
        :rtype: int
        """
        return self._bf_table_size

    @bf_table_size.setter
    def bf_table_size(self, bf_table_size: int):
        """Sets the bf_table_size of this V0038DiagStatistics.

        Backfill Schedule Last table size  # noqa: E501

        :param bf_table_size: The bf_table_size of this V0038DiagStatistics.
        :type bf_table_size: int
        """

        self._bf_table_size = bf_table_size

    @property
    def bf_table_size_mean(self) -> int:
        """Gets the bf_table_size_mean of this V0038DiagStatistics.

        Backfill Schedule Mean table size  # noqa: E501

        :return: The bf_table_size_mean of this V0038DiagStatistics.
        :rtype: int
        """
        return self._bf_table_size_mean

    @bf_table_size_mean.setter
    def bf_table_size_mean(self, bf_table_size_mean: int):
        """Sets the bf_table_size_mean of this V0038DiagStatistics.

        Backfill Schedule Mean table size  # noqa: E501

        :param bf_table_size_mean: The bf_table_size_mean of this V0038DiagStatistics.
        :type bf_table_size_mean: int
        """

        self._bf_table_size_mean = bf_table_size_mean

    @property
    def bf_when_last_cycle(self) -> int:
        """Gets the bf_when_last_cycle of this V0038DiagStatistics.

        Last cycle timestamp  # noqa: E501

        :return: The bf_when_last_cycle of this V0038DiagStatistics.
        :rtype: int
        """
        return self._bf_when_last_cycle

    @bf_when_last_cycle.setter
    def bf_when_last_cycle(self, bf_when_last_cycle: int):
        """Sets the bf_when_last_cycle of this V0038DiagStatistics.

        Last cycle timestamp  # noqa: E501

        :param bf_when_last_cycle: The bf_when_last_cycle of this V0038DiagStatistics.
        :type bf_when_last_cycle: int
        """

        self._bf_when_last_cycle = bf_when_last_cycle

    @property
    def bf_active(self) -> bool:
        """Gets the bf_active of this V0038DiagStatistics.

        Backfill Schedule currently active  # noqa: E501

        :return: The bf_active of this V0038DiagStatistics.
        :rtype: bool
        """
        return self._bf_active

    @bf_active.setter
    def bf_active(self, bf_active: bool):
        """Sets the bf_active of this V0038DiagStatistics.

        Backfill Schedule currently active  # noqa: E501

        :param bf_active: The bf_active of this V0038DiagStatistics.
        :type bf_active: bool
        """

        self._bf_active = bf_active

    @property
    def rpcs_by_message_type(self) -> List[V0038DiagRpcm]:
        """Gets the rpcs_by_message_type of this V0038DiagStatistics.

        Remote Procedure Call statistics by message type  # noqa: E501

        :return: The rpcs_by_message_type of this V0038DiagStatistics.
        :rtype: List[V0038DiagRpcm]
        """
        return self._rpcs_by_message_type

    @rpcs_by_message_type.setter
    def rpcs_by_message_type(self, rpcs_by_message_type: List[V0038DiagRpcm]):
        """Sets the rpcs_by_message_type of this V0038DiagStatistics.

        Remote Procedure Call statistics by message type  # noqa: E501

        :param rpcs_by_message_type: The rpcs_by_message_type of this V0038DiagStatistics.
        :type rpcs_by_message_type: List[V0038DiagRpcm]
        """

        self._rpcs_by_message_type = rpcs_by_message_type

    @property
    def rpcs_by_user(self) -> List[V0038DiagRpcu]:
        """Gets the rpcs_by_user of this V0038DiagStatistics.

        Remote Procedure Call statistics by user  # noqa: E501

        :return: The rpcs_by_user of this V0038DiagStatistics.
        :rtype: List[V0038DiagRpcu]
        """
        return self._rpcs_by_user

    @rpcs_by_user.setter
    def rpcs_by_user(self, rpcs_by_user: List[V0038DiagRpcu]):
        """Sets the rpcs_by_user of this V0038DiagStatistics.

        Remote Procedure Call statistics by user  # noqa: E501

        :param rpcs_by_user: The rpcs_by_user of this V0038DiagStatistics.
        :type rpcs_by_user: List[V0038DiagRpcu]
        """

        self._rpcs_by_user = rpcs_by_user
